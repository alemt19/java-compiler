Created by PLY (http://www.dabeaz.com/ply)

Unused terminals:

    BITAND
    BITNOT
    BITOR
    BITXOR
    COLON
    DEC
    DIVEQUALS
    DOT
    EQ
    GT
    GTE
    INC
    LSHIFT
    LT
    LTE
    MINUSEQUALS
    MOD
    MODEQUALS
    MULTEQUALS
    NEQ
    NOT
    PLUSEQUALS
    RSHIFT
    URSHIFT
    XOR

Grammar

Rule 0     S' -> program
Rule 1     program -> lista_declaraciones
Rule 2     lista_declaraciones -> declaracion lista_declaraciones
Rule 3     lista_declaraciones -> declaracion
Rule 4     declaracion -> declaracion_variable
Rule 5     declaracion -> declaracion_funcion
Rule 6     declaracion -> declaracion_clase
Rule 7     declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE
Rule 8     declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE
Rule 9     lista_miembros -> lista_miembros miembro
Rule 10    lista_miembros -> miembro
Rule 11    lista_miembros -> <empty>
Rule 12    miembro -> declaracion_variable
Rule 13    miembro -> declaracion_funcion
Rule 14    tipo -> simple_type
Rule 15    tipo -> simple_type LBRACKET RBRACKET
Rule 16    simple_type -> INT_TYPE
Rule 17    simple_type -> FLOAT
Rule 18    simple_type -> BOOLEAN
Rule 19    simple_type -> CHAR
Rule 20    simple_type -> STRING
Rule 21    simple_type -> IDENTIFIER
Rule 22    tipo_funcion -> INT_TYPE
Rule 23    tipo_funcion -> FLOAT
Rule 24    tipo_funcion -> BOOLEAN
Rule 25    tipo_funcion -> CHAR
Rule 26    tipo_funcion -> STRING
Rule 27    tipo_funcion -> VOID
Rule 28    declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON
Rule 29    declaracion_variable -> tipo IDENTIFIER SEMICOLON
Rule 30    declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque
Rule 31    lista_modificadores -> lista_modificadores modificador
Rule 32    lista_modificadores -> modificador
Rule 33    modificador -> PUBLIC
Rule 34    modificador -> PRIVATE
Rule 35    modificador -> PROTECTED
Rule 36    modificador -> STATIC
Rule 37    lista_parametros -> parametro
Rule 38    lista_parametros -> lista_parametros COMMA parametro
Rule 39    lista_parametros -> <empty>
Rule 40    parametro -> tipo IDENTIFIER
Rule 41    bloque -> LBRACE lista_sentencias RBRACE
Rule 42    lista_sentencias -> sentencia lista_sentencias
Rule 43    lista_sentencias -> sentencia
Rule 44    lista_sentencias -> <empty>
Rule 45    expresion -> expresion_aritmetica
Rule 46    expresion -> expresion_logica
Rule 47    expresion -> expresion_identificador
Rule 48    expresion -> expresion_literal
Rule 49    expresion_aritmetica -> expresion PLUS expresion
Rule 50    expresion_aritmetica -> expresion MINUS expresion
Rule 51    expresion_aritmetica -> expresion MULT expresion
Rule 52    expresion_aritmetica -> expresion DIV expresion
Rule 53    expresion_logica -> expresion AND expresion
Rule 54    expresion_logica -> expresion OR expresion
Rule 55    expresion_identificador -> IDENTIFIER
Rule 56    expresion_literal -> NUMBER
Rule 57    expresion_literal -> STRING_LITERAL
Rule 58    expresion_literal -> CHARACTER_LITERAL
Rule 59    expresion_literal -> BOOLEAN_LITERAL
Rule 60    expresion_literal -> NULL_LITERAL
Rule 61    sentencia -> declaracion_variable
Rule 62    sentencia -> IDENTIFIER EQUALS expresion SEMICOLON
Rule 63    sentencia -> IF LPAREN expresion RPAREN bloque
Rule 64    sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque
Rule 65    sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque
Rule 66    sentencia -> WHILE LPAREN expresion RPAREN bloque

Terminals, with rules where they appear

AND                  : 53
BITAND               : 
BITNOT               : 
BITOR                : 
BITXOR               : 
BOOLEAN              : 18 24
BOOLEAN_LITERAL      : 59
CHAR                 : 19 25
CHARACTER_LITERAL    : 58
CLASS                : 7 8
COLON                : 
COMMA                : 38
DEC                  : 
DIV                  : 52
DIVEQUALS            : 
DOT                  : 
ELSE                 : 64
EQ                   : 
EQUALS               : 28 62 65
FLOAT                : 17 23
FOR                  : 65
GT                   : 
GTE                  : 
IDENTIFIER           : 7 8 21 28 29 30 40 55 62 65
IF                   : 63 64
INC                  : 
INT_TYPE             : 16 22
LBRACE               : 7 8 41
LBRACKET             : 15
LPAREN               : 30 63 64 65 66
LSHIFT               : 
LT                   : 
LTE                  : 
MINUS                : 50
MINUSEQUALS          : 
MOD                  : 
MODEQUALS            : 
MULT                 : 51
MULTEQUALS           : 
NEQ                  : 
NOT                  : 
NULL_LITERAL         : 60
NUMBER               : 56
OR                   : 54
PLUS                 : 49
PLUSEQUALS           : 
PRIVATE              : 34
PROTECTED            : 35
PUBLIC               : 33
RBRACE               : 7 8 41
RBRACKET             : 15
RPAREN               : 30 63 64 65 66
RSHIFT               : 
SEMICOLON            : 28 29 62 65 65
STATIC               : 36
STRING               : 20 26
STRING_LITERAL       : 57
URSHIFT              : 
VOID                 : 27
WHILE                : 66
XOR                  : 
error                : 

Nonterminals, with rules where they appear

bloque               : 30 63 64 64 65 66
declaracion          : 2 3
declaracion_clase    : 6
declaracion_funcion  : 5 13
declaracion_variable : 4 12 61
expresion            : 28 49 49 50 50 51 51 52 52 53 53 54 54 62 63 64 65 65 65 66
expresion_aritmetica : 45
expresion_identificador : 47
expresion_literal    : 48
expresion_logica     : 46
lista_declaraciones  : 1 2
lista_miembros       : 7 8 9
lista_modificadores  : 30 31
lista_parametros     : 30 38
lista_sentencias     : 41 42
miembro              : 9 10
modificador          : 8 31 32
parametro            : 37 38
program              : 0
sentencia            : 42 43
simple_type          : 14 15
tipo                 : 28 29 40 65
tipo_funcion         : 30


state 0

    (0) S' -> . program
    (1) program -> . lista_declaraciones
    (2) lista_declaraciones -> . declaracion lista_declaraciones
    (3) lista_declaraciones -> . declaracion
    (4) declaracion -> . declaracion_variable
    (5) declaracion -> . declaracion_funcion
    (6) declaracion -> . declaracion_clase
    (28) declaracion_variable -> . tipo IDENTIFIER EQUALS expresion SEMICOLON
    (29) declaracion_variable -> . tipo IDENTIFIER SEMICOLON
    (30) declaracion_funcion -> . lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque
    (7) declaracion_clase -> . CLASS IDENTIFIER LBRACE lista_miembros RBRACE
    (8) declaracion_clase -> . modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE
    (14) tipo -> . simple_type
    (15) tipo -> . simple_type LBRACKET RBRACKET
    (31) lista_modificadores -> . lista_modificadores modificador
    (32) lista_modificadores -> . modificador
    (33) modificador -> . PUBLIC
    (34) modificador -> . PRIVATE
    (35) modificador -> . PROTECTED
    (36) modificador -> . STATIC
    (16) simple_type -> . INT_TYPE
    (17) simple_type -> . FLOAT
    (18) simple_type -> . BOOLEAN
    (19) simple_type -> . CHAR
    (20) simple_type -> . STRING
    (21) simple_type -> . IDENTIFIER

    CLASS           shift and go to state 10
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16
    INT_TYPE        shift and go to state 17
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    IDENTIFIER      shift and go to state 8

    program                        shift and go to state 1
    lista_declaraciones            shift and go to state 2
    declaracion                    shift and go to state 3
    declaracion_variable           shift and go to state 4
    declaracion_funcion            shift and go to state 5
    declaracion_clase              shift and go to state 6
    tipo                           shift and go to state 7
    lista_modificadores            shift and go to state 9
    modificador                    shift and go to state 11
    simple_type                    shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> lista_declaraciones .

    $end            reduce using rule 1 (program -> lista_declaraciones .)


state 3

    (2) lista_declaraciones -> declaracion . lista_declaraciones
    (3) lista_declaraciones -> declaracion .
    (2) lista_declaraciones -> . declaracion lista_declaraciones
    (3) lista_declaraciones -> . declaracion
    (4) declaracion -> . declaracion_variable
    (5) declaracion -> . declaracion_funcion
    (6) declaracion -> . declaracion_clase
    (28) declaracion_variable -> . tipo IDENTIFIER EQUALS expresion SEMICOLON
    (29) declaracion_variable -> . tipo IDENTIFIER SEMICOLON
    (30) declaracion_funcion -> . lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque
    (7) declaracion_clase -> . CLASS IDENTIFIER LBRACE lista_miembros RBRACE
    (8) declaracion_clase -> . modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE
    (14) tipo -> . simple_type
    (15) tipo -> . simple_type LBRACKET RBRACKET
    (31) lista_modificadores -> . lista_modificadores modificador
    (32) lista_modificadores -> . modificador
    (33) modificador -> . PUBLIC
    (34) modificador -> . PRIVATE
    (35) modificador -> . PROTECTED
    (36) modificador -> . STATIC
    (16) simple_type -> . INT_TYPE
    (17) simple_type -> . FLOAT
    (18) simple_type -> . BOOLEAN
    (19) simple_type -> . CHAR
    (20) simple_type -> . STRING
    (21) simple_type -> . IDENTIFIER

    $end            reduce using rule 3 (lista_declaraciones -> declaracion .)
    CLASS           shift and go to state 10
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16
    INT_TYPE        shift and go to state 17
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    IDENTIFIER      shift and go to state 8

    declaracion                    shift and go to state 3
    lista_declaraciones            shift and go to state 22
    declaracion_variable           shift and go to state 4
    declaracion_funcion            shift and go to state 5
    declaracion_clase              shift and go to state 6
    tipo                           shift and go to state 7
    lista_modificadores            shift and go to state 9
    modificador                    shift and go to state 11
    simple_type                    shift and go to state 12

state 4

    (4) declaracion -> declaracion_variable .

    CLASS           reduce using rule 4 (declaracion -> declaracion_variable .)
    PUBLIC          reduce using rule 4 (declaracion -> declaracion_variable .)
    PRIVATE         reduce using rule 4 (declaracion -> declaracion_variable .)
    PROTECTED       reduce using rule 4 (declaracion -> declaracion_variable .)
    STATIC          reduce using rule 4 (declaracion -> declaracion_variable .)
    INT_TYPE        reduce using rule 4 (declaracion -> declaracion_variable .)
    FLOAT           reduce using rule 4 (declaracion -> declaracion_variable .)
    BOOLEAN         reduce using rule 4 (declaracion -> declaracion_variable .)
    CHAR            reduce using rule 4 (declaracion -> declaracion_variable .)
    STRING          reduce using rule 4 (declaracion -> declaracion_variable .)
    IDENTIFIER      reduce using rule 4 (declaracion -> declaracion_variable .)
    $end            reduce using rule 4 (declaracion -> declaracion_variable .)


state 5

    (5) declaracion -> declaracion_funcion .

    CLASS           reduce using rule 5 (declaracion -> declaracion_funcion .)
    PUBLIC          reduce using rule 5 (declaracion -> declaracion_funcion .)
    PRIVATE         reduce using rule 5 (declaracion -> declaracion_funcion .)
    PROTECTED       reduce using rule 5 (declaracion -> declaracion_funcion .)
    STATIC          reduce using rule 5 (declaracion -> declaracion_funcion .)
    INT_TYPE        reduce using rule 5 (declaracion -> declaracion_funcion .)
    FLOAT           reduce using rule 5 (declaracion -> declaracion_funcion .)
    BOOLEAN         reduce using rule 5 (declaracion -> declaracion_funcion .)
    CHAR            reduce using rule 5 (declaracion -> declaracion_funcion .)
    STRING          reduce using rule 5 (declaracion -> declaracion_funcion .)
    IDENTIFIER      reduce using rule 5 (declaracion -> declaracion_funcion .)
    $end            reduce using rule 5 (declaracion -> declaracion_funcion .)


state 6

    (6) declaracion -> declaracion_clase .

    CLASS           reduce using rule 6 (declaracion -> declaracion_clase .)
    PUBLIC          reduce using rule 6 (declaracion -> declaracion_clase .)
    PRIVATE         reduce using rule 6 (declaracion -> declaracion_clase .)
    PROTECTED       reduce using rule 6 (declaracion -> declaracion_clase .)
    STATIC          reduce using rule 6 (declaracion -> declaracion_clase .)
    INT_TYPE        reduce using rule 6 (declaracion -> declaracion_clase .)
    FLOAT           reduce using rule 6 (declaracion -> declaracion_clase .)
    BOOLEAN         reduce using rule 6 (declaracion -> declaracion_clase .)
    CHAR            reduce using rule 6 (declaracion -> declaracion_clase .)
    STRING          reduce using rule 6 (declaracion -> declaracion_clase .)
    IDENTIFIER      reduce using rule 6 (declaracion -> declaracion_clase .)
    $end            reduce using rule 6 (declaracion -> declaracion_clase .)


state 7

    (28) declaracion_variable -> tipo . IDENTIFIER EQUALS expresion SEMICOLON
    (29) declaracion_variable -> tipo . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 23


state 8

    (21) simple_type -> IDENTIFIER .

    LBRACKET        reduce using rule 21 (simple_type -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 21 (simple_type -> IDENTIFIER .)


state 9

    (30) declaracion_funcion -> lista_modificadores . tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque
    (31) lista_modificadores -> lista_modificadores . modificador
    (22) tipo_funcion -> . INT_TYPE
    (23) tipo_funcion -> . FLOAT
    (24) tipo_funcion -> . BOOLEAN
    (25) tipo_funcion -> . CHAR
    (26) tipo_funcion -> . STRING
    (27) tipo_funcion -> . VOID
    (33) modificador -> . PUBLIC
    (34) modificador -> . PRIVATE
    (35) modificador -> . PROTECTED
    (36) modificador -> . STATIC

    INT_TYPE        shift and go to state 26
    FLOAT           shift and go to state 27
    BOOLEAN         shift and go to state 28
    CHAR            shift and go to state 29
    STRING          shift and go to state 30
    VOID            shift and go to state 31
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16

    tipo_funcion                   shift and go to state 24
    modificador                    shift and go to state 25

state 10

    (7) declaracion_clase -> CLASS . IDENTIFIER LBRACE lista_miembros RBRACE

    IDENTIFIER      shift and go to state 32


state 11

    (8) declaracion_clase -> modificador . CLASS IDENTIFIER LBRACE lista_miembros RBRACE
    (32) lista_modificadores -> modificador .

    CLASS           shift and go to state 33
    INT_TYPE        reduce using rule 32 (lista_modificadores -> modificador .)
    FLOAT           reduce using rule 32 (lista_modificadores -> modificador .)
    BOOLEAN         reduce using rule 32 (lista_modificadores -> modificador .)
    CHAR            reduce using rule 32 (lista_modificadores -> modificador .)
    STRING          reduce using rule 32 (lista_modificadores -> modificador .)
    VOID            reduce using rule 32 (lista_modificadores -> modificador .)
    PUBLIC          reduce using rule 32 (lista_modificadores -> modificador .)
    PRIVATE         reduce using rule 32 (lista_modificadores -> modificador .)
    PROTECTED       reduce using rule 32 (lista_modificadores -> modificador .)
    STATIC          reduce using rule 32 (lista_modificadores -> modificador .)


state 12

    (14) tipo -> simple_type .
    (15) tipo -> simple_type . LBRACKET RBRACKET

    IDENTIFIER      reduce using rule 14 (tipo -> simple_type .)
    LBRACKET        shift and go to state 34


state 13

    (33) modificador -> PUBLIC .

    CLASS           reduce using rule 33 (modificador -> PUBLIC .)
    INT_TYPE        reduce using rule 33 (modificador -> PUBLIC .)
    FLOAT           reduce using rule 33 (modificador -> PUBLIC .)
    BOOLEAN         reduce using rule 33 (modificador -> PUBLIC .)
    CHAR            reduce using rule 33 (modificador -> PUBLIC .)
    STRING          reduce using rule 33 (modificador -> PUBLIC .)
    VOID            reduce using rule 33 (modificador -> PUBLIC .)
    PUBLIC          reduce using rule 33 (modificador -> PUBLIC .)
    PRIVATE         reduce using rule 33 (modificador -> PUBLIC .)
    PROTECTED       reduce using rule 33 (modificador -> PUBLIC .)
    STATIC          reduce using rule 33 (modificador -> PUBLIC .)


state 14

    (34) modificador -> PRIVATE .

    CLASS           reduce using rule 34 (modificador -> PRIVATE .)
    INT_TYPE        reduce using rule 34 (modificador -> PRIVATE .)
    FLOAT           reduce using rule 34 (modificador -> PRIVATE .)
    BOOLEAN         reduce using rule 34 (modificador -> PRIVATE .)
    CHAR            reduce using rule 34 (modificador -> PRIVATE .)
    STRING          reduce using rule 34 (modificador -> PRIVATE .)
    VOID            reduce using rule 34 (modificador -> PRIVATE .)
    PUBLIC          reduce using rule 34 (modificador -> PRIVATE .)
    PRIVATE         reduce using rule 34 (modificador -> PRIVATE .)
    PROTECTED       reduce using rule 34 (modificador -> PRIVATE .)
    STATIC          reduce using rule 34 (modificador -> PRIVATE .)


state 15

    (35) modificador -> PROTECTED .

    CLASS           reduce using rule 35 (modificador -> PROTECTED .)
    INT_TYPE        reduce using rule 35 (modificador -> PROTECTED .)
    FLOAT           reduce using rule 35 (modificador -> PROTECTED .)
    BOOLEAN         reduce using rule 35 (modificador -> PROTECTED .)
    CHAR            reduce using rule 35 (modificador -> PROTECTED .)
    STRING          reduce using rule 35 (modificador -> PROTECTED .)
    VOID            reduce using rule 35 (modificador -> PROTECTED .)
    PUBLIC          reduce using rule 35 (modificador -> PROTECTED .)
    PRIVATE         reduce using rule 35 (modificador -> PROTECTED .)
    PROTECTED       reduce using rule 35 (modificador -> PROTECTED .)
    STATIC          reduce using rule 35 (modificador -> PROTECTED .)


state 16

    (36) modificador -> STATIC .

    CLASS           reduce using rule 36 (modificador -> STATIC .)
    INT_TYPE        reduce using rule 36 (modificador -> STATIC .)
    FLOAT           reduce using rule 36 (modificador -> STATIC .)
    BOOLEAN         reduce using rule 36 (modificador -> STATIC .)
    CHAR            reduce using rule 36 (modificador -> STATIC .)
    STRING          reduce using rule 36 (modificador -> STATIC .)
    VOID            reduce using rule 36 (modificador -> STATIC .)
    PUBLIC          reduce using rule 36 (modificador -> STATIC .)
    PRIVATE         reduce using rule 36 (modificador -> STATIC .)
    PROTECTED       reduce using rule 36 (modificador -> STATIC .)
    STATIC          reduce using rule 36 (modificador -> STATIC .)


state 17

    (16) simple_type -> INT_TYPE .

    LBRACKET        reduce using rule 16 (simple_type -> INT_TYPE .)
    IDENTIFIER      reduce using rule 16 (simple_type -> INT_TYPE .)


state 18

    (17) simple_type -> FLOAT .

    LBRACKET        reduce using rule 17 (simple_type -> FLOAT .)
    IDENTIFIER      reduce using rule 17 (simple_type -> FLOAT .)


state 19

    (18) simple_type -> BOOLEAN .

    LBRACKET        reduce using rule 18 (simple_type -> BOOLEAN .)
    IDENTIFIER      reduce using rule 18 (simple_type -> BOOLEAN .)


state 20

    (19) simple_type -> CHAR .

    LBRACKET        reduce using rule 19 (simple_type -> CHAR .)
    IDENTIFIER      reduce using rule 19 (simple_type -> CHAR .)


state 21

    (20) simple_type -> STRING .

    LBRACKET        reduce using rule 20 (simple_type -> STRING .)
    IDENTIFIER      reduce using rule 20 (simple_type -> STRING .)


state 22

    (2) lista_declaraciones -> declaracion lista_declaraciones .

    $end            reduce using rule 2 (lista_declaraciones -> declaracion lista_declaraciones .)


state 23

    (28) declaracion_variable -> tipo IDENTIFIER . EQUALS expresion SEMICOLON
    (29) declaracion_variable -> tipo IDENTIFIER . SEMICOLON

    EQUALS          shift and go to state 35
    SEMICOLON       shift and go to state 36


state 24

    (30) declaracion_funcion -> lista_modificadores tipo_funcion . IDENTIFIER LPAREN lista_parametros RPAREN bloque

    IDENTIFIER      shift and go to state 37


state 25

    (31) lista_modificadores -> lista_modificadores modificador .

    INT_TYPE        reduce using rule 31 (lista_modificadores -> lista_modificadores modificador .)
    FLOAT           reduce using rule 31 (lista_modificadores -> lista_modificadores modificador .)
    BOOLEAN         reduce using rule 31 (lista_modificadores -> lista_modificadores modificador .)
    CHAR            reduce using rule 31 (lista_modificadores -> lista_modificadores modificador .)
    STRING          reduce using rule 31 (lista_modificadores -> lista_modificadores modificador .)
    VOID            reduce using rule 31 (lista_modificadores -> lista_modificadores modificador .)
    PUBLIC          reduce using rule 31 (lista_modificadores -> lista_modificadores modificador .)
    PRIVATE         reduce using rule 31 (lista_modificadores -> lista_modificadores modificador .)
    PROTECTED       reduce using rule 31 (lista_modificadores -> lista_modificadores modificador .)
    STATIC          reduce using rule 31 (lista_modificadores -> lista_modificadores modificador .)


state 26

    (22) tipo_funcion -> INT_TYPE .

    IDENTIFIER      reduce using rule 22 (tipo_funcion -> INT_TYPE .)


state 27

    (23) tipo_funcion -> FLOAT .

    IDENTIFIER      reduce using rule 23 (tipo_funcion -> FLOAT .)


state 28

    (24) tipo_funcion -> BOOLEAN .

    IDENTIFIER      reduce using rule 24 (tipo_funcion -> BOOLEAN .)


state 29

    (25) tipo_funcion -> CHAR .

    IDENTIFIER      reduce using rule 25 (tipo_funcion -> CHAR .)


state 30

    (26) tipo_funcion -> STRING .

    IDENTIFIER      reduce using rule 26 (tipo_funcion -> STRING .)


state 31

    (27) tipo_funcion -> VOID .

    IDENTIFIER      reduce using rule 27 (tipo_funcion -> VOID .)


state 32

    (7) declaracion_clase -> CLASS IDENTIFIER . LBRACE lista_miembros RBRACE

    LBRACE          shift and go to state 38


state 33

    (8) declaracion_clase -> modificador CLASS . IDENTIFIER LBRACE lista_miembros RBRACE

    IDENTIFIER      shift and go to state 39


state 34

    (15) tipo -> simple_type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 40


state 35

    (28) declaracion_variable -> tipo IDENTIFIER EQUALS . expresion SEMICOLON
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 42
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 36

    (29) declaracion_variable -> tipo IDENTIFIER SEMICOLON .

    CLASS           reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    PUBLIC          reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    PRIVATE         reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    PROTECTED       reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    STATIC          reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    INT_TYPE        reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    STRING          reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    $end            reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    IF              reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 29 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)


state 37

    (30) declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER . LPAREN lista_parametros RPAREN bloque

    LPAREN          shift and go to state 52


state 38

    (7) declaracion_clase -> CLASS IDENTIFIER LBRACE . lista_miembros RBRACE
    (9) lista_miembros -> . lista_miembros miembro
    (10) lista_miembros -> . miembro
    (11) lista_miembros -> .
    (12) miembro -> . declaracion_variable
    (13) miembro -> . declaracion_funcion
    (28) declaracion_variable -> . tipo IDENTIFIER EQUALS expresion SEMICOLON
    (29) declaracion_variable -> . tipo IDENTIFIER SEMICOLON
    (30) declaracion_funcion -> . lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque
    (14) tipo -> . simple_type
    (15) tipo -> . simple_type LBRACKET RBRACKET
    (31) lista_modificadores -> . lista_modificadores modificador
    (32) lista_modificadores -> . modificador
    (16) simple_type -> . INT_TYPE
    (17) simple_type -> . FLOAT
    (18) simple_type -> . BOOLEAN
    (19) simple_type -> . CHAR
    (20) simple_type -> . STRING
    (21) simple_type -> . IDENTIFIER
    (33) modificador -> . PUBLIC
    (34) modificador -> . PRIVATE
    (35) modificador -> . PROTECTED
    (36) modificador -> . STATIC

  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
    RBRACE          reduce using rule 11 (lista_miembros -> .)
    INT_TYPE        shift and go to state 17
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    IDENTIFIER      shift and go to state 8
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16

  ! INT_TYPE        [ reduce using rule 11 (lista_miembros -> .) ]
  ! FLOAT           [ reduce using rule 11 (lista_miembros -> .) ]
  ! BOOLEAN         [ reduce using rule 11 (lista_miembros -> .) ]
  ! CHAR            [ reduce using rule 11 (lista_miembros -> .) ]
  ! STRING          [ reduce using rule 11 (lista_miembros -> .) ]
  ! IDENTIFIER      [ reduce using rule 11 (lista_miembros -> .) ]
  ! PUBLIC          [ reduce using rule 11 (lista_miembros -> .) ]
  ! PRIVATE         [ reduce using rule 11 (lista_miembros -> .) ]
  ! PROTECTED       [ reduce using rule 11 (lista_miembros -> .) ]
  ! STATIC          [ reduce using rule 11 (lista_miembros -> .) ]

    lista_miembros                 shift and go to state 53
    miembro                        shift and go to state 54
    declaracion_variable           shift and go to state 55
    declaracion_funcion            shift and go to state 56
    tipo                           shift and go to state 7
    lista_modificadores            shift and go to state 9
    simple_type                    shift and go to state 12
    modificador                    shift and go to state 57

state 39

    (8) declaracion_clase -> modificador CLASS IDENTIFIER . LBRACE lista_miembros RBRACE

    LBRACE          shift and go to state 58


state 40

    (15) tipo -> simple_type LBRACKET RBRACKET .

    IDENTIFIER      reduce using rule 15 (tipo -> simple_type LBRACKET RBRACKET .)


state 41

    (55) expresion_identificador -> IDENTIFIER .

    SEMICOLON       reduce using rule 55 (expresion_identificador -> IDENTIFIER .)
    PLUS            reduce using rule 55 (expresion_identificador -> IDENTIFIER .)
    MINUS           reduce using rule 55 (expresion_identificador -> IDENTIFIER .)
    MULT            reduce using rule 55 (expresion_identificador -> IDENTIFIER .)
    DIV             reduce using rule 55 (expresion_identificador -> IDENTIFIER .)
    AND             reduce using rule 55 (expresion_identificador -> IDENTIFIER .)
    OR              reduce using rule 55 (expresion_identificador -> IDENTIFIER .)
    RPAREN          reduce using rule 55 (expresion_identificador -> IDENTIFIER .)


state 42

    (28) declaracion_variable -> tipo IDENTIFIER EQUALS expresion . SEMICOLON
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    SEMICOLON       shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 43

    (45) expresion -> expresion_aritmetica .

    SEMICOLON       reduce using rule 45 (expresion -> expresion_aritmetica .)
    PLUS            reduce using rule 45 (expresion -> expresion_aritmetica .)
    MINUS           reduce using rule 45 (expresion -> expresion_aritmetica .)
    MULT            reduce using rule 45 (expresion -> expresion_aritmetica .)
    DIV             reduce using rule 45 (expresion -> expresion_aritmetica .)
    AND             reduce using rule 45 (expresion -> expresion_aritmetica .)
    OR              reduce using rule 45 (expresion -> expresion_aritmetica .)
    RPAREN          reduce using rule 45 (expresion -> expresion_aritmetica .)


state 44

    (46) expresion -> expresion_logica .

    SEMICOLON       reduce using rule 46 (expresion -> expresion_logica .)
    PLUS            reduce using rule 46 (expresion -> expresion_logica .)
    MINUS           reduce using rule 46 (expresion -> expresion_logica .)
    MULT            reduce using rule 46 (expresion -> expresion_logica .)
    DIV             reduce using rule 46 (expresion -> expresion_logica .)
    AND             reduce using rule 46 (expresion -> expresion_logica .)
    OR              reduce using rule 46 (expresion -> expresion_logica .)
    RPAREN          reduce using rule 46 (expresion -> expresion_logica .)


state 45

    (47) expresion -> expresion_identificador .

    SEMICOLON       reduce using rule 47 (expresion -> expresion_identificador .)
    PLUS            reduce using rule 47 (expresion -> expresion_identificador .)
    MINUS           reduce using rule 47 (expresion -> expresion_identificador .)
    MULT            reduce using rule 47 (expresion -> expresion_identificador .)
    DIV             reduce using rule 47 (expresion -> expresion_identificador .)
    AND             reduce using rule 47 (expresion -> expresion_identificador .)
    OR              reduce using rule 47 (expresion -> expresion_identificador .)
    RPAREN          reduce using rule 47 (expresion -> expresion_identificador .)


state 46

    (48) expresion -> expresion_literal .

    SEMICOLON       reduce using rule 48 (expresion -> expresion_literal .)
    PLUS            reduce using rule 48 (expresion -> expresion_literal .)
    MINUS           reduce using rule 48 (expresion -> expresion_literal .)
    MULT            reduce using rule 48 (expresion -> expresion_literal .)
    DIV             reduce using rule 48 (expresion -> expresion_literal .)
    AND             reduce using rule 48 (expresion -> expresion_literal .)
    OR              reduce using rule 48 (expresion -> expresion_literal .)
    RPAREN          reduce using rule 48 (expresion -> expresion_literal .)


state 47

    (56) expresion_literal -> NUMBER .

    SEMICOLON       reduce using rule 56 (expresion_literal -> NUMBER .)
    PLUS            reduce using rule 56 (expresion_literal -> NUMBER .)
    MINUS           reduce using rule 56 (expresion_literal -> NUMBER .)
    MULT            reduce using rule 56 (expresion_literal -> NUMBER .)
    DIV             reduce using rule 56 (expresion_literal -> NUMBER .)
    AND             reduce using rule 56 (expresion_literal -> NUMBER .)
    OR              reduce using rule 56 (expresion_literal -> NUMBER .)
    RPAREN          reduce using rule 56 (expresion_literal -> NUMBER .)


state 48

    (57) expresion_literal -> STRING_LITERAL .

    SEMICOLON       reduce using rule 57 (expresion_literal -> STRING_LITERAL .)
    PLUS            reduce using rule 57 (expresion_literal -> STRING_LITERAL .)
    MINUS           reduce using rule 57 (expresion_literal -> STRING_LITERAL .)
    MULT            reduce using rule 57 (expresion_literal -> STRING_LITERAL .)
    DIV             reduce using rule 57 (expresion_literal -> STRING_LITERAL .)
    AND             reduce using rule 57 (expresion_literal -> STRING_LITERAL .)
    OR              reduce using rule 57 (expresion_literal -> STRING_LITERAL .)
    RPAREN          reduce using rule 57 (expresion_literal -> STRING_LITERAL .)


state 49

    (58) expresion_literal -> CHARACTER_LITERAL .

    SEMICOLON       reduce using rule 58 (expresion_literal -> CHARACTER_LITERAL .)
    PLUS            reduce using rule 58 (expresion_literal -> CHARACTER_LITERAL .)
    MINUS           reduce using rule 58 (expresion_literal -> CHARACTER_LITERAL .)
    MULT            reduce using rule 58 (expresion_literal -> CHARACTER_LITERAL .)
    DIV             reduce using rule 58 (expresion_literal -> CHARACTER_LITERAL .)
    AND             reduce using rule 58 (expresion_literal -> CHARACTER_LITERAL .)
    OR              reduce using rule 58 (expresion_literal -> CHARACTER_LITERAL .)
    RPAREN          reduce using rule 58 (expresion_literal -> CHARACTER_LITERAL .)


state 50

    (59) expresion_literal -> BOOLEAN_LITERAL .

    SEMICOLON       reduce using rule 59 (expresion_literal -> BOOLEAN_LITERAL .)
    PLUS            reduce using rule 59 (expresion_literal -> BOOLEAN_LITERAL .)
    MINUS           reduce using rule 59 (expresion_literal -> BOOLEAN_LITERAL .)
    MULT            reduce using rule 59 (expresion_literal -> BOOLEAN_LITERAL .)
    DIV             reduce using rule 59 (expresion_literal -> BOOLEAN_LITERAL .)
    AND             reduce using rule 59 (expresion_literal -> BOOLEAN_LITERAL .)
    OR              reduce using rule 59 (expresion_literal -> BOOLEAN_LITERAL .)
    RPAREN          reduce using rule 59 (expresion_literal -> BOOLEAN_LITERAL .)


state 51

    (60) expresion_literal -> NULL_LITERAL .

    SEMICOLON       reduce using rule 60 (expresion_literal -> NULL_LITERAL .)
    PLUS            reduce using rule 60 (expresion_literal -> NULL_LITERAL .)
    MINUS           reduce using rule 60 (expresion_literal -> NULL_LITERAL .)
    MULT            reduce using rule 60 (expresion_literal -> NULL_LITERAL .)
    DIV             reduce using rule 60 (expresion_literal -> NULL_LITERAL .)
    AND             reduce using rule 60 (expresion_literal -> NULL_LITERAL .)
    OR              reduce using rule 60 (expresion_literal -> NULL_LITERAL .)
    RPAREN          reduce using rule 60 (expresion_literal -> NULL_LITERAL .)


state 52

    (30) declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN . lista_parametros RPAREN bloque
    (37) lista_parametros -> . parametro
    (38) lista_parametros -> . lista_parametros COMMA parametro
    (39) lista_parametros -> .
    (40) parametro -> . tipo IDENTIFIER
    (14) tipo -> . simple_type
    (15) tipo -> . simple_type LBRACKET RBRACKET
    (16) simple_type -> . INT_TYPE
    (17) simple_type -> . FLOAT
    (18) simple_type -> . BOOLEAN
    (19) simple_type -> . CHAR
    (20) simple_type -> . STRING
    (21) simple_type -> . IDENTIFIER

    RPAREN          reduce using rule 39 (lista_parametros -> .)
    COMMA           reduce using rule 39 (lista_parametros -> .)
    INT_TYPE        shift and go to state 17
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    IDENTIFIER      shift and go to state 8

    lista_parametros               shift and go to state 66
    parametro                      shift and go to state 67
    tipo                           shift and go to state 68
    simple_type                    shift and go to state 12

state 53

    (7) declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros . RBRACE
    (9) lista_miembros -> lista_miembros . miembro
    (12) miembro -> . declaracion_variable
    (13) miembro -> . declaracion_funcion
    (28) declaracion_variable -> . tipo IDENTIFIER EQUALS expresion SEMICOLON
    (29) declaracion_variable -> . tipo IDENTIFIER SEMICOLON
    (30) declaracion_funcion -> . lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque
    (14) tipo -> . simple_type
    (15) tipo -> . simple_type LBRACKET RBRACKET
    (31) lista_modificadores -> . lista_modificadores modificador
    (32) lista_modificadores -> . modificador
    (16) simple_type -> . INT_TYPE
    (17) simple_type -> . FLOAT
    (18) simple_type -> . BOOLEAN
    (19) simple_type -> . CHAR
    (20) simple_type -> . STRING
    (21) simple_type -> . IDENTIFIER
    (33) modificador -> . PUBLIC
    (34) modificador -> . PRIVATE
    (35) modificador -> . PROTECTED
    (36) modificador -> . STATIC

    RBRACE          shift and go to state 69
    INT_TYPE        shift and go to state 17
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    IDENTIFIER      shift and go to state 8
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16

    miembro                        shift and go to state 70
    declaracion_variable           shift and go to state 55
    declaracion_funcion            shift and go to state 56
    tipo                           shift and go to state 7
    lista_modificadores            shift and go to state 9
    simple_type                    shift and go to state 12
    modificador                    shift and go to state 57

state 54

    (10) lista_miembros -> miembro .

    RBRACE          reduce using rule 10 (lista_miembros -> miembro .)
    INT_TYPE        reduce using rule 10 (lista_miembros -> miembro .)
    FLOAT           reduce using rule 10 (lista_miembros -> miembro .)
    BOOLEAN         reduce using rule 10 (lista_miembros -> miembro .)
    CHAR            reduce using rule 10 (lista_miembros -> miembro .)
    STRING          reduce using rule 10 (lista_miembros -> miembro .)
    IDENTIFIER      reduce using rule 10 (lista_miembros -> miembro .)
    PUBLIC          reduce using rule 10 (lista_miembros -> miembro .)
    PRIVATE         reduce using rule 10 (lista_miembros -> miembro .)
    PROTECTED       reduce using rule 10 (lista_miembros -> miembro .)
    STATIC          reduce using rule 10 (lista_miembros -> miembro .)


state 55

    (12) miembro -> declaracion_variable .

    RBRACE          reduce using rule 12 (miembro -> declaracion_variable .)
    INT_TYPE        reduce using rule 12 (miembro -> declaracion_variable .)
    FLOAT           reduce using rule 12 (miembro -> declaracion_variable .)
    BOOLEAN         reduce using rule 12 (miembro -> declaracion_variable .)
    CHAR            reduce using rule 12 (miembro -> declaracion_variable .)
    STRING          reduce using rule 12 (miembro -> declaracion_variable .)
    IDENTIFIER      reduce using rule 12 (miembro -> declaracion_variable .)
    PUBLIC          reduce using rule 12 (miembro -> declaracion_variable .)
    PRIVATE         reduce using rule 12 (miembro -> declaracion_variable .)
    PROTECTED       reduce using rule 12 (miembro -> declaracion_variable .)
    STATIC          reduce using rule 12 (miembro -> declaracion_variable .)


state 56

    (13) miembro -> declaracion_funcion .

    RBRACE          reduce using rule 13 (miembro -> declaracion_funcion .)
    INT_TYPE        reduce using rule 13 (miembro -> declaracion_funcion .)
    FLOAT           reduce using rule 13 (miembro -> declaracion_funcion .)
    BOOLEAN         reduce using rule 13 (miembro -> declaracion_funcion .)
    CHAR            reduce using rule 13 (miembro -> declaracion_funcion .)
    STRING          reduce using rule 13 (miembro -> declaracion_funcion .)
    IDENTIFIER      reduce using rule 13 (miembro -> declaracion_funcion .)
    PUBLIC          reduce using rule 13 (miembro -> declaracion_funcion .)
    PRIVATE         reduce using rule 13 (miembro -> declaracion_funcion .)
    PROTECTED       reduce using rule 13 (miembro -> declaracion_funcion .)
    STATIC          reduce using rule 13 (miembro -> declaracion_funcion .)


state 57

    (32) lista_modificadores -> modificador .

    INT_TYPE        reduce using rule 32 (lista_modificadores -> modificador .)
    FLOAT           reduce using rule 32 (lista_modificadores -> modificador .)
    BOOLEAN         reduce using rule 32 (lista_modificadores -> modificador .)
    CHAR            reduce using rule 32 (lista_modificadores -> modificador .)
    STRING          reduce using rule 32 (lista_modificadores -> modificador .)
    VOID            reduce using rule 32 (lista_modificadores -> modificador .)
    PUBLIC          reduce using rule 32 (lista_modificadores -> modificador .)
    PRIVATE         reduce using rule 32 (lista_modificadores -> modificador .)
    PROTECTED       reduce using rule 32 (lista_modificadores -> modificador .)
    STATIC          reduce using rule 32 (lista_modificadores -> modificador .)


state 58

    (8) declaracion_clase -> modificador CLASS IDENTIFIER LBRACE . lista_miembros RBRACE
    (9) lista_miembros -> . lista_miembros miembro
    (10) lista_miembros -> . miembro
    (11) lista_miembros -> .
    (12) miembro -> . declaracion_variable
    (13) miembro -> . declaracion_funcion
    (28) declaracion_variable -> . tipo IDENTIFIER EQUALS expresion SEMICOLON
    (29) declaracion_variable -> . tipo IDENTIFIER SEMICOLON
    (30) declaracion_funcion -> . lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque
    (14) tipo -> . simple_type
    (15) tipo -> . simple_type LBRACKET RBRACKET
    (31) lista_modificadores -> . lista_modificadores modificador
    (32) lista_modificadores -> . modificador
    (16) simple_type -> . INT_TYPE
    (17) simple_type -> . FLOAT
    (18) simple_type -> . BOOLEAN
    (19) simple_type -> . CHAR
    (20) simple_type -> . STRING
    (21) simple_type -> . IDENTIFIER
    (33) modificador -> . PUBLIC
    (34) modificador -> . PRIVATE
    (35) modificador -> . PROTECTED
    (36) modificador -> . STATIC

  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
    RBRACE          reduce using rule 11 (lista_miembros -> .)
    INT_TYPE        shift and go to state 17
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    IDENTIFIER      shift and go to state 8
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16

  ! INT_TYPE        [ reduce using rule 11 (lista_miembros -> .) ]
  ! FLOAT           [ reduce using rule 11 (lista_miembros -> .) ]
  ! BOOLEAN         [ reduce using rule 11 (lista_miembros -> .) ]
  ! CHAR            [ reduce using rule 11 (lista_miembros -> .) ]
  ! STRING          [ reduce using rule 11 (lista_miembros -> .) ]
  ! IDENTIFIER      [ reduce using rule 11 (lista_miembros -> .) ]
  ! PUBLIC          [ reduce using rule 11 (lista_miembros -> .) ]
  ! PRIVATE         [ reduce using rule 11 (lista_miembros -> .) ]
  ! PROTECTED       [ reduce using rule 11 (lista_miembros -> .) ]
  ! STATIC          [ reduce using rule 11 (lista_miembros -> .) ]

    modificador                    shift and go to state 57
    lista_miembros                 shift and go to state 71
    miembro                        shift and go to state 54
    declaracion_variable           shift and go to state 55
    declaracion_funcion            shift and go to state 56
    tipo                           shift and go to state 7
    lista_modificadores            shift and go to state 9
    simple_type                    shift and go to state 12

state 59

    (28) declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .

    CLASS           reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    PUBLIC          reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    PRIVATE         reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    PROTECTED       reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    STATIC          reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    INT_TYPE        reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    FLOAT           reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    BOOLEAN         reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    CHAR            reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    STRING          reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    IDENTIFIER      reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    $end            reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    RBRACE          reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    IF              reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    FOR             reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 28 (declaracion_variable -> tipo IDENTIFIER EQUALS expresion SEMICOLON .)


state 60

    (49) expresion_aritmetica -> expresion PLUS . expresion
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 72
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 61

    (50) expresion_aritmetica -> expresion MINUS . expresion
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 73
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 62

    (51) expresion_aritmetica -> expresion MULT . expresion
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 74
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 63

    (52) expresion_aritmetica -> expresion DIV . expresion
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 75
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 64

    (53) expresion_logica -> expresion AND . expresion
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 76
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 65

    (54) expresion_logica -> expresion OR . expresion
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 77
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 66

    (30) declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros . RPAREN bloque
    (38) lista_parametros -> lista_parametros . COMMA parametro

    RPAREN          shift and go to state 78
    COMMA           shift and go to state 79


state 67

    (37) lista_parametros -> parametro .

    RPAREN          reduce using rule 37 (lista_parametros -> parametro .)
    COMMA           reduce using rule 37 (lista_parametros -> parametro .)


state 68

    (40) parametro -> tipo . IDENTIFIER

    IDENTIFIER      shift and go to state 80


state 69

    (7) declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .

    CLASS           reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    PUBLIC          reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    PRIVATE         reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    PROTECTED       reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    STATIC          reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    INT_TYPE        reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    FLOAT           reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    BOOLEAN         reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    CHAR            reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    STRING          reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    IDENTIFIER      reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    $end            reduce using rule 7 (declaracion_clase -> CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)


state 70

    (9) lista_miembros -> lista_miembros miembro .

    RBRACE          reduce using rule 9 (lista_miembros -> lista_miembros miembro .)
    INT_TYPE        reduce using rule 9 (lista_miembros -> lista_miembros miembro .)
    FLOAT           reduce using rule 9 (lista_miembros -> lista_miembros miembro .)
    BOOLEAN         reduce using rule 9 (lista_miembros -> lista_miembros miembro .)
    CHAR            reduce using rule 9 (lista_miembros -> lista_miembros miembro .)
    STRING          reduce using rule 9 (lista_miembros -> lista_miembros miembro .)
    IDENTIFIER      reduce using rule 9 (lista_miembros -> lista_miembros miembro .)
    PUBLIC          reduce using rule 9 (lista_miembros -> lista_miembros miembro .)
    PRIVATE         reduce using rule 9 (lista_miembros -> lista_miembros miembro .)
    PROTECTED       reduce using rule 9 (lista_miembros -> lista_miembros miembro .)
    STATIC          reduce using rule 9 (lista_miembros -> lista_miembros miembro .)


state 71

    (8) declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros . RBRACE
    (9) lista_miembros -> lista_miembros . miembro
    (12) miembro -> . declaracion_variable
    (13) miembro -> . declaracion_funcion
    (28) declaracion_variable -> . tipo IDENTIFIER EQUALS expresion SEMICOLON
    (29) declaracion_variable -> . tipo IDENTIFIER SEMICOLON
    (30) declaracion_funcion -> . lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque
    (14) tipo -> . simple_type
    (15) tipo -> . simple_type LBRACKET RBRACKET
    (31) lista_modificadores -> . lista_modificadores modificador
    (32) lista_modificadores -> . modificador
    (16) simple_type -> . INT_TYPE
    (17) simple_type -> . FLOAT
    (18) simple_type -> . BOOLEAN
    (19) simple_type -> . CHAR
    (20) simple_type -> . STRING
    (21) simple_type -> . IDENTIFIER
    (33) modificador -> . PUBLIC
    (34) modificador -> . PRIVATE
    (35) modificador -> . PROTECTED
    (36) modificador -> . STATIC

    RBRACE          shift and go to state 81
    INT_TYPE        shift and go to state 17
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    IDENTIFIER      shift and go to state 8
    PUBLIC          shift and go to state 13
    PRIVATE         shift and go to state 14
    PROTECTED       shift and go to state 15
    STATIC          shift and go to state 16

    modificador                    shift and go to state 57
    miembro                        shift and go to state 70
    declaracion_variable           shift and go to state 55
    declaracion_funcion            shift and go to state 56
    tipo                           shift and go to state 7
    lista_modificadores            shift and go to state 9
    simple_type                    shift and go to state 12

state 72

    (49) expresion_aritmetica -> expresion PLUS expresion .
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    SEMICOLON       reduce using rule 49 (expresion_aritmetica -> expresion PLUS expresion .)
    PLUS            reduce using rule 49 (expresion_aritmetica -> expresion PLUS expresion .)
    MINUS           reduce using rule 49 (expresion_aritmetica -> expresion PLUS expresion .)
    AND             reduce using rule 49 (expresion_aritmetica -> expresion PLUS expresion .)
    OR              reduce using rule 49 (expresion_aritmetica -> expresion PLUS expresion .)
    RPAREN          reduce using rule 49 (expresion_aritmetica -> expresion PLUS expresion .)
    MULT            shift and go to state 62
    DIV             shift and go to state 63

  ! MULT            [ reduce using rule 49 (expresion_aritmetica -> expresion PLUS expresion .) ]
  ! DIV             [ reduce using rule 49 (expresion_aritmetica -> expresion PLUS expresion .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 73

    (50) expresion_aritmetica -> expresion MINUS expresion .
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    SEMICOLON       reduce using rule 50 (expresion_aritmetica -> expresion MINUS expresion .)
    PLUS            reduce using rule 50 (expresion_aritmetica -> expresion MINUS expresion .)
    MINUS           reduce using rule 50 (expresion_aritmetica -> expresion MINUS expresion .)
    AND             reduce using rule 50 (expresion_aritmetica -> expresion MINUS expresion .)
    OR              reduce using rule 50 (expresion_aritmetica -> expresion MINUS expresion .)
    RPAREN          reduce using rule 50 (expresion_aritmetica -> expresion MINUS expresion .)
    MULT            shift and go to state 62
    DIV             shift and go to state 63

  ! MULT            [ reduce using rule 50 (expresion_aritmetica -> expresion MINUS expresion .) ]
  ! DIV             [ reduce using rule 50 (expresion_aritmetica -> expresion MINUS expresion .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 74

    (51) expresion_aritmetica -> expresion MULT expresion .
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    SEMICOLON       reduce using rule 51 (expresion_aritmetica -> expresion MULT expresion .)
    PLUS            reduce using rule 51 (expresion_aritmetica -> expresion MULT expresion .)
    MINUS           reduce using rule 51 (expresion_aritmetica -> expresion MULT expresion .)
    MULT            reduce using rule 51 (expresion_aritmetica -> expresion MULT expresion .)
    DIV             reduce using rule 51 (expresion_aritmetica -> expresion MULT expresion .)
    AND             reduce using rule 51 (expresion_aritmetica -> expresion MULT expresion .)
    OR              reduce using rule 51 (expresion_aritmetica -> expresion MULT expresion .)
    RPAREN          reduce using rule 51 (expresion_aritmetica -> expresion MULT expresion .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! MULT            [ shift and go to state 62 ]
  ! DIV             [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 75

    (52) expresion_aritmetica -> expresion DIV expresion .
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    SEMICOLON       reduce using rule 52 (expresion_aritmetica -> expresion DIV expresion .)
    PLUS            reduce using rule 52 (expresion_aritmetica -> expresion DIV expresion .)
    MINUS           reduce using rule 52 (expresion_aritmetica -> expresion DIV expresion .)
    MULT            reduce using rule 52 (expresion_aritmetica -> expresion DIV expresion .)
    DIV             reduce using rule 52 (expresion_aritmetica -> expresion DIV expresion .)
    AND             reduce using rule 52 (expresion_aritmetica -> expresion DIV expresion .)
    OR              reduce using rule 52 (expresion_aritmetica -> expresion DIV expresion .)
    RPAREN          reduce using rule 52 (expresion_aritmetica -> expresion DIV expresion .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! MULT            [ shift and go to state 62 ]
  ! DIV             [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 76

    (53) expresion_logica -> expresion AND expresion .
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    SEMICOLON       reduce using rule 53 (expresion_logica -> expresion AND expresion .)
    AND             reduce using rule 53 (expresion_logica -> expresion AND expresion .)
    OR              reduce using rule 53 (expresion_logica -> expresion AND expresion .)
    RPAREN          reduce using rule 53 (expresion_logica -> expresion AND expresion .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63

  ! PLUS            [ reduce using rule 53 (expresion_logica -> expresion AND expresion .) ]
  ! MINUS           [ reduce using rule 53 (expresion_logica -> expresion AND expresion .) ]
  ! MULT            [ reduce using rule 53 (expresion_logica -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 53 (expresion_logica -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 77

    (54) expresion_logica -> expresion OR expresion .
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    SEMICOLON       reduce using rule 54 (expresion_logica -> expresion OR expresion .)
    OR              reduce using rule 54 (expresion_logica -> expresion OR expresion .)
    RPAREN          reduce using rule 54 (expresion_logica -> expresion OR expresion .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    AND             shift and go to state 64

  ! PLUS            [ reduce using rule 54 (expresion_logica -> expresion OR expresion .) ]
  ! MINUS           [ reduce using rule 54 (expresion_logica -> expresion OR expresion .) ]
  ! MULT            [ reduce using rule 54 (expresion_logica -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 54 (expresion_logica -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 54 (expresion_logica -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 65 ]


state 78

    (30) declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN . bloque
    (41) bloque -> . LBRACE lista_sentencias RBRACE

    LBRACE          shift and go to state 83

    bloque                         shift and go to state 82

state 79

    (38) lista_parametros -> lista_parametros COMMA . parametro
    (40) parametro -> . tipo IDENTIFIER
    (14) tipo -> . simple_type
    (15) tipo -> . simple_type LBRACKET RBRACKET
    (16) simple_type -> . INT_TYPE
    (17) simple_type -> . FLOAT
    (18) simple_type -> . BOOLEAN
    (19) simple_type -> . CHAR
    (20) simple_type -> . STRING
    (21) simple_type -> . IDENTIFIER

    INT_TYPE        shift and go to state 17
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    IDENTIFIER      shift and go to state 8

    parametro                      shift and go to state 84
    tipo                           shift and go to state 68
    simple_type                    shift and go to state 12

state 80

    (40) parametro -> tipo IDENTIFIER .

    RPAREN          reduce using rule 40 (parametro -> tipo IDENTIFIER .)
    COMMA           reduce using rule 40 (parametro -> tipo IDENTIFIER .)


state 81

    (8) declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .

    CLASS           reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    PUBLIC          reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    PRIVATE         reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    PROTECTED       reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    STATIC          reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    INT_TYPE        reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    FLOAT           reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    BOOLEAN         reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    CHAR            reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    STRING          reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    IDENTIFIER      reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)
    $end            reduce using rule 8 (declaracion_clase -> modificador CLASS IDENTIFIER LBRACE lista_miembros RBRACE .)


state 82

    (30) declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .

    CLASS           reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    PUBLIC          reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    PRIVATE         reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    PROTECTED       reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    STATIC          reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    INT_TYPE        reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    FLOAT           reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    BOOLEAN         reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    CHAR            reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    STRING          reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    IDENTIFIER      reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    $end            reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    RBRACE          reduce using rule 30 (declaracion_funcion -> lista_modificadores tipo_funcion IDENTIFIER LPAREN lista_parametros RPAREN bloque .)


state 83

    (41) bloque -> LBRACE . lista_sentencias RBRACE
    (42) lista_sentencias -> . sentencia lista_sentencias
    (43) lista_sentencias -> . sentencia
    (44) lista_sentencias -> .
    (61) sentencia -> . declaracion_variable
    (62) sentencia -> . IDENTIFIER EQUALS expresion SEMICOLON
    (63) sentencia -> . IF LPAREN expresion RPAREN bloque
    (64) sentencia -> . IF LPAREN expresion RPAREN bloque ELSE bloque
    (65) sentencia -> . FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque
    (66) sentencia -> . WHILE LPAREN expresion RPAREN bloque
    (28) declaracion_variable -> . tipo IDENTIFIER EQUALS expresion SEMICOLON
    (29) declaracion_variable -> . tipo IDENTIFIER SEMICOLON
    (14) tipo -> . simple_type
    (15) tipo -> . simple_type LBRACKET RBRACKET
    (16) simple_type -> . INT_TYPE
    (17) simple_type -> . FLOAT
    (18) simple_type -> . BOOLEAN
    (19) simple_type -> . CHAR
    (20) simple_type -> . STRING
    (21) simple_type -> . IDENTIFIER

    RBRACE          reduce using rule 44 (lista_sentencias -> .)
    IDENTIFIER      shift and go to state 88
    IF              shift and go to state 89
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    INT_TYPE        shift and go to state 17
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21

    lista_sentencias               shift and go to state 85
    sentencia                      shift and go to state 86
    declaracion_variable           shift and go to state 87
    tipo                           shift and go to state 7
    simple_type                    shift and go to state 12

state 84

    (38) lista_parametros -> lista_parametros COMMA parametro .

    RPAREN          reduce using rule 38 (lista_parametros -> lista_parametros COMMA parametro .)
    COMMA           reduce using rule 38 (lista_parametros -> lista_parametros COMMA parametro .)


state 85

    (41) bloque -> LBRACE lista_sentencias . RBRACE

    RBRACE          shift and go to state 92


state 86

    (42) lista_sentencias -> sentencia . lista_sentencias
    (43) lista_sentencias -> sentencia .
    (42) lista_sentencias -> . sentencia lista_sentencias
    (43) lista_sentencias -> . sentencia
    (44) lista_sentencias -> .
    (61) sentencia -> . declaracion_variable
    (62) sentencia -> . IDENTIFIER EQUALS expresion SEMICOLON
    (63) sentencia -> . IF LPAREN expresion RPAREN bloque
    (64) sentencia -> . IF LPAREN expresion RPAREN bloque ELSE bloque
    (65) sentencia -> . FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque
    (66) sentencia -> . WHILE LPAREN expresion RPAREN bloque
    (28) declaracion_variable -> . tipo IDENTIFIER EQUALS expresion SEMICOLON
    (29) declaracion_variable -> . tipo IDENTIFIER SEMICOLON
    (14) tipo -> . simple_type
    (15) tipo -> . simple_type LBRACKET RBRACKET
    (16) simple_type -> . INT_TYPE
    (17) simple_type -> . FLOAT
    (18) simple_type -> . BOOLEAN
    (19) simple_type -> . CHAR
    (20) simple_type -> . STRING
    (21) simple_type -> . IDENTIFIER

  ! reduce/reduce conflict for RBRACE resolved using rule 43 (lista_sentencias -> sentencia .)
    RBRACE          reduce using rule 43 (lista_sentencias -> sentencia .)
    IDENTIFIER      shift and go to state 88
    IF              shift and go to state 89
    FOR             shift and go to state 90
    WHILE           shift and go to state 91
    INT_TYPE        shift and go to state 17
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21

  ! RBRACE          [ reduce using rule 44 (lista_sentencias -> .) ]

    sentencia                      shift and go to state 86
    lista_sentencias               shift and go to state 93
    declaracion_variable           shift and go to state 87
    tipo                           shift and go to state 7
    simple_type                    shift and go to state 12

state 87

    (61) sentencia -> declaracion_variable .

    IDENTIFIER      reduce using rule 61 (sentencia -> declaracion_variable .)
    IF              reduce using rule 61 (sentencia -> declaracion_variable .)
    FOR             reduce using rule 61 (sentencia -> declaracion_variable .)
    WHILE           reduce using rule 61 (sentencia -> declaracion_variable .)
    INT_TYPE        reduce using rule 61 (sentencia -> declaracion_variable .)
    FLOAT           reduce using rule 61 (sentencia -> declaracion_variable .)
    BOOLEAN         reduce using rule 61 (sentencia -> declaracion_variable .)
    CHAR            reduce using rule 61 (sentencia -> declaracion_variable .)
    STRING          reduce using rule 61 (sentencia -> declaracion_variable .)
    RBRACE          reduce using rule 61 (sentencia -> declaracion_variable .)


state 88

    (62) sentencia -> IDENTIFIER . EQUALS expresion SEMICOLON
    (21) simple_type -> IDENTIFIER .

    EQUALS          shift and go to state 94
    LBRACKET        reduce using rule 21 (simple_type -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 21 (simple_type -> IDENTIFIER .)


state 89

    (63) sentencia -> IF . LPAREN expresion RPAREN bloque
    (64) sentencia -> IF . LPAREN expresion RPAREN bloque ELSE bloque

    LPAREN          shift and go to state 95


state 90

    (65) sentencia -> FOR . LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque

    LPAREN          shift and go to state 96


state 91

    (66) sentencia -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 97


state 92

    (41) bloque -> LBRACE lista_sentencias RBRACE .

    CLASS           reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    PUBLIC          reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    PRIVATE         reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    PROTECTED       reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    STATIC          reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    INT_TYPE        reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    FLOAT           reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    BOOLEAN         reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    CHAR            reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    STRING          reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    IDENTIFIER      reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    $end            reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    RBRACE          reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    ELSE            reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    IF              reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    FOR             reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)
    WHILE           reduce using rule 41 (bloque -> LBRACE lista_sentencias RBRACE .)


state 93

    (42) lista_sentencias -> sentencia lista_sentencias .

    RBRACE          reduce using rule 42 (lista_sentencias -> sentencia lista_sentencias .)


state 94

    (62) sentencia -> IDENTIFIER EQUALS . expresion SEMICOLON
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 98
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 95

    (63) sentencia -> IF LPAREN . expresion RPAREN bloque
    (64) sentencia -> IF LPAREN . expresion RPAREN bloque ELSE bloque
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 99
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 96

    (65) sentencia -> FOR LPAREN . tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque
    (14) tipo -> . simple_type
    (15) tipo -> . simple_type LBRACKET RBRACKET
    (16) simple_type -> . INT_TYPE
    (17) simple_type -> . FLOAT
    (18) simple_type -> . BOOLEAN
    (19) simple_type -> . CHAR
    (20) simple_type -> . STRING
    (21) simple_type -> . IDENTIFIER

    INT_TYPE        shift and go to state 17
    FLOAT           shift and go to state 18
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 20
    STRING          shift and go to state 21
    IDENTIFIER      shift and go to state 8

    tipo                           shift and go to state 100
    simple_type                    shift and go to state 12

state 97

    (66) sentencia -> WHILE LPAREN . expresion RPAREN bloque
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 101
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 98

    (62) sentencia -> IDENTIFIER EQUALS expresion . SEMICOLON
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    SEMICOLON       shift and go to state 102
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 99

    (63) sentencia -> IF LPAREN expresion . RPAREN bloque
    (64) sentencia -> IF LPAREN expresion . RPAREN bloque ELSE bloque
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    RPAREN          shift and go to state 103
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 100

    (65) sentencia -> FOR LPAREN tipo . IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque

    IDENTIFIER      shift and go to state 104


state 101

    (66) sentencia -> WHILE LPAREN expresion . RPAREN bloque
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    RPAREN          shift and go to state 105
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 102

    (62) sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .

    IDENTIFIER      reduce using rule 62 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    IF              reduce using rule 62 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    FOR             reduce using rule 62 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 62 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    INT_TYPE        reduce using rule 62 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    FLOAT           reduce using rule 62 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    BOOLEAN         reduce using rule 62 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    CHAR            reduce using rule 62 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    STRING          reduce using rule 62 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    RBRACE          reduce using rule 62 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)


state 103

    (63) sentencia -> IF LPAREN expresion RPAREN . bloque
    (64) sentencia -> IF LPAREN expresion RPAREN . bloque ELSE bloque
    (41) bloque -> . LBRACE lista_sentencias RBRACE

    LBRACE          shift and go to state 83

    bloque                         shift and go to state 106

state 104

    (65) sentencia -> FOR LPAREN tipo IDENTIFIER . EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque

    EQUALS          shift and go to state 107


state 105

    (66) sentencia -> WHILE LPAREN expresion RPAREN . bloque
    (41) bloque -> . LBRACE lista_sentencias RBRACE

    LBRACE          shift and go to state 83

    bloque                         shift and go to state 108

state 106

    (63) sentencia -> IF LPAREN expresion RPAREN bloque .
    (64) sentencia -> IF LPAREN expresion RPAREN bloque . ELSE bloque

    IDENTIFIER      reduce using rule 63 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 63 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    FOR             reduce using rule 63 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 63 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    INT_TYPE        reduce using rule 63 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    FLOAT           reduce using rule 63 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    BOOLEAN         reduce using rule 63 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    CHAR            reduce using rule 63 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    STRING          reduce using rule 63 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    RBRACE          reduce using rule 63 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    ELSE            shift and go to state 109


state 107

    (65) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS . expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 110
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 108

    (66) sentencia -> WHILE LPAREN expresion RPAREN bloque .

    IDENTIFIER      reduce using rule 66 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 66 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    FOR             reduce using rule 66 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 66 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    INT_TYPE        reduce using rule 66 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    FLOAT           reduce using rule 66 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    BOOLEAN         reduce using rule 66 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    CHAR            reduce using rule 66 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    STRING          reduce using rule 66 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    RBRACE          reduce using rule 66 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)


state 109

    (64) sentencia -> IF LPAREN expresion RPAREN bloque ELSE . bloque
    (41) bloque -> . LBRACE lista_sentencias RBRACE

    LBRACE          shift and go to state 83

    bloque                         shift and go to state 111

state 110

    (65) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion . SEMICOLON expresion SEMICOLON expresion RPAREN bloque
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    SEMICOLON       shift and go to state 112
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 111

    (64) sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .

    IDENTIFIER      reduce using rule 64 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    IF              reduce using rule 64 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    FOR             reduce using rule 64 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    WHILE           reduce using rule 64 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    INT_TYPE        reduce using rule 64 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    FLOAT           reduce using rule 64 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    BOOLEAN         reduce using rule 64 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    CHAR            reduce using rule 64 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    STRING          reduce using rule 64 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    RBRACE          reduce using rule 64 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)


state 112

    (65) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON . expresion SEMICOLON expresion RPAREN bloque
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 113
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 113

    (65) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion . SEMICOLON expresion RPAREN bloque
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    SEMICOLON       shift and go to state 114
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 114

    (65) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON . expresion RPAREN bloque
    (45) expresion -> . expresion_aritmetica
    (46) expresion -> . expresion_logica
    (47) expresion -> . expresion_identificador
    (48) expresion -> . expresion_literal
    (49) expresion_aritmetica -> . expresion PLUS expresion
    (50) expresion_aritmetica -> . expresion MINUS expresion
    (51) expresion_aritmetica -> . expresion MULT expresion
    (52) expresion_aritmetica -> . expresion DIV expresion
    (53) expresion_logica -> . expresion AND expresion
    (54) expresion_logica -> . expresion OR expresion
    (55) expresion_identificador -> . IDENTIFIER
    (56) expresion_literal -> . NUMBER
    (57) expresion_literal -> . STRING_LITERAL
    (58) expresion_literal -> . CHARACTER_LITERAL
    (59) expresion_literal -> . BOOLEAN_LITERAL
    (60) expresion_literal -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 41
    NUMBER          shift and go to state 47
    STRING_LITERAL  shift and go to state 48
    CHARACTER_LITERAL shift and go to state 49
    BOOLEAN_LITERAL shift and go to state 50
    NULL_LITERAL    shift and go to state 51

    expresion                      shift and go to state 115
    expresion_aritmetica           shift and go to state 43
    expresion_logica               shift and go to state 44
    expresion_identificador        shift and go to state 45
    expresion_literal              shift and go to state 46

state 115

    (65) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion . RPAREN bloque
    (49) expresion_aritmetica -> expresion . PLUS expresion
    (50) expresion_aritmetica -> expresion . MINUS expresion
    (51) expresion_aritmetica -> expresion . MULT expresion
    (52) expresion_aritmetica -> expresion . DIV expresion
    (53) expresion_logica -> expresion . AND expresion
    (54) expresion_logica -> expresion . OR expresion

    RPAREN          shift and go to state 116
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 116

    (65) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN . bloque
    (41) bloque -> . LBRACE lista_sentencias RBRACE

    LBRACE          shift and go to state 83

    bloque                         shift and go to state 117

state 117

    (65) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .

    IDENTIFIER      reduce using rule 65 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    IF              reduce using rule 65 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    FOR             reduce using rule 65 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    WHILE           reduce using rule 65 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    INT_TYPE        reduce using rule 65 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    FLOAT           reduce using rule 65 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    BOOLEAN         reduce using rule 65 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    CHAR            reduce using rule 65 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    STRING          reduce using rule 65 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    RBRACE          reduce using rule 65 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT_TYPE in state 38 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 38 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 38 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 38 resolved as shift
WARNING: shift/reduce conflict for STRING in state 38 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 38 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 38 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 38 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 38 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 38 resolved as shift
WARNING: shift/reduce conflict for INT_TYPE in state 58 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 58 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING in state 58 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 58 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 58 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 58 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 58 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 58 resolved as shift
WARNING: reduce/reduce conflict in state 86 resolved using rule (lista_sentencias -> sentencia)
WARNING: rejected rule (lista_sentencias -> <empty>) in state 86
