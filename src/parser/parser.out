Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ASSERT
    BITAND
    BITNOT
    BITOR
    BITXOR
    BOOLEAN_TYPE
    BREAK
    BYTE_TYPE
    CASE
    CATCH
    CHAR_TYPE
    CLASS
    COLON
    CONST
    CONTINUE
    DEC
    DEFAULT
    DIVEQUALS
    DO
    DOT
    DOUBLE_TYPE
    ENUM
    EQ
    EXTENDS
    FALSE
    FINAL
    FINALLY
    FLOAT_TYPE
    GOTO
    GT
    GTE
    IMPLEMENTS
    IMPORT
    INC
    INSTANCEOF
    INT
    INTERFACE
    LBRACKET
    LONG_TYPE
    LSHIFT
    LT
    LTE
    MINUSEQUALS
    MOD
    MODEQUALS
    MULTEQUALS
    NATIVE
    NEQ
    NEW
    NOT
    NULL
    PACKAGE
    PLUSEQUALS
    PRIVATE
    PROTECTED
    PUBLIC
    RBRACKET
    RETURN
    RSHIFT
    SHORT_TYPE
    STATIC
    STRICTFP
    STRING_TYPE
    SUPER
    SWITCH
    SYNCHRONIZED
    THIS
    THROW
    THROWS
    TRANSIENT
    TRUE
    TRY
    URSHIFT
    VOID
    VOLATILE
    XOR

Grammar

Rule 0     S' -> program
Rule 1     program -> lista_declaraciones
Rule 2     lista_declaraciones -> lista_declaraciones declaracion
Rule 3     lista_declaraciones -> declaracion
Rule 4     declaracion -> declaracion_variable
Rule 5     declaracion -> declaracion_funcion
Rule 6     tipo -> INT_TYPE
Rule 7     tipo -> FLOAT
Rule 8     tipo -> BOOLEAN
Rule 9     tipo -> CHAR
Rule 10    tipo -> STRING
Rule 11    declaracion_variable -> tipo IDENTIFIER SEMICOLON
Rule 12    declaracion_funcion -> tipo IDENTIFIER LPAREN lista_parametros RPAREN bloque
Rule 13    lista_parametros -> lista_parametros COMMA tipo IDENTIFIER
Rule 14    lista_parametros -> tipo IDENTIFIER
Rule 15    lista_parametros -> <empty>
Rule 16    bloque -> LBRACE lista_sentencias RBRACE
Rule 17    lista_sentencias -> lista_sentencias sentencia
Rule 18    lista_sentencias -> sentencia
Rule 19    lista_sentencias -> <empty>
Rule 20    expresion -> expresion PLUS expresion
Rule 21    expresion -> expresion MINUS expresion
Rule 22    expresion -> expresion MULT expresion
Rule 23    expresion -> expresion DIV expresion
Rule 24    expresion -> expresion AND expresion
Rule 25    expresion -> expresion OR expresion
Rule 26    sentencia -> IDENTIFIER EQUALS expresion SEMICOLON
Rule 27    sentencia -> IF LPAREN expresion RPAREN bloque
Rule 28    sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque
Rule 29    sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque
Rule 30    sentencia -> WHILE LPAREN expresion RPAREN bloque
Rule 31    expresion -> IDENTIFIER
Rule 32    expresion -> NUMBER
Rule 33    expresion -> STRING_LITERAL
Rule 34    expresion -> CHARACTER_LITERAL
Rule 35    expresion -> BOOLEAN_LITERAL
Rule 36    expresion -> NULL_LITERAL

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 24
ASSERT               : 
BITAND               : 
BITNOT               : 
BITOR                : 
BITXOR               : 
BOOLEAN              : 8
BOOLEAN_LITERAL      : 35
BOOLEAN_TYPE         : 
BREAK                : 
BYTE_TYPE            : 
CASE                 : 
CATCH                : 
CHAR                 : 9
CHARACTER_LITERAL    : 34
CHAR_TYPE            : 
CLASS                : 
COLON                : 
COMMA                : 13
CONST                : 
CONTINUE             : 
DEC                  : 
DEFAULT              : 
DIV                  : 23
DIVEQUALS            : 
DO                   : 
DOT                  : 
DOUBLE_TYPE          : 
ELSE                 : 28
ENUM                 : 
EQ                   : 
EQUALS               : 26 29
EXTENDS              : 
FALSE                : 
FINAL                : 
FINALLY              : 
FLOAT                : 7
FLOAT_TYPE           : 
FOR                  : 29
GOTO                 : 
GT                   : 
GTE                  : 
IDENTIFIER           : 11 12 13 14 26 29 31
IF                   : 27 28
IMPLEMENTS           : 
IMPORT               : 
INC                  : 
INSTANCEOF           : 
INT                  : 
INTERFACE            : 
INT_TYPE             : 6
LBRACE               : 16
LBRACKET             : 
LONG_TYPE            : 
LPAREN               : 12 27 28 29 30
LSHIFT               : 
LT                   : 
LTE                  : 
MINUS                : 21
MINUSEQUALS          : 
MOD                  : 
MODEQUALS            : 
MULT                 : 22
MULTEQUALS           : 
NATIVE               : 
NEQ                  : 
NEW                  : 
NOT                  : 
NULL                 : 
NULL_LITERAL         : 36
NUMBER               : 32
OR                   : 25
PACKAGE              : 
PLUS                 : 20
PLUSEQUALS           : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RBRACE               : 16
RBRACKET             : 
RETURN               : 
RPAREN               : 12 27 28 29 30
RSHIFT               : 
SEMICOLON            : 11 26 29 29
SHORT_TYPE           : 
STATIC               : 
STRICTFP             : 
STRING               : 10
STRING_LITERAL       : 33
STRING_TYPE          : 
SUPER                : 
SWITCH               : 
SYNCHRONIZED         : 
THIS                 : 
THROW                : 
THROWS               : 
TRANSIENT            : 
TRUE                 : 
TRY                  : 
URSHIFT              : 
VOID                 : 
VOLATILE             : 
WHILE                : 30
XOR                  : 
error                : 

Nonterminals, with rules where they appear

bloque               : 12 27 28 28 29 30
declaracion          : 2 3
declaracion_funcion  : 5
declaracion_variable : 4
expresion            : 20 20 21 21 22 22 23 23 24 24 25 25 26 27 28 29 29 29 30
lista_declaraciones  : 1 2
lista_parametros     : 12 13
lista_sentencias     : 16 17
program              : 0
sentencia            : 17 18
tipo                 : 11 12 13 14 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . lista_declaraciones
    (2) lista_declaraciones -> . lista_declaraciones declaracion
    (3) lista_declaraciones -> . declaracion
    (4) declaracion -> . declaracion_variable
    (5) declaracion -> . declaracion_funcion
    (11) declaracion_variable -> . tipo IDENTIFIER SEMICOLON
    (12) declaracion_funcion -> . tipo IDENTIFIER LPAREN lista_parametros RPAREN bloque
    (6) tipo -> . INT_TYPE
    (7) tipo -> . FLOAT
    (8) tipo -> . BOOLEAN
    (9) tipo -> . CHAR
    (10) tipo -> . STRING

    INT_TYPE        shift and go to state 7
    FLOAT           shift and go to state 8
    BOOLEAN         shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11

    program                        shift and go to state 1
    lista_declaraciones            shift and go to state 2
    declaracion                    shift and go to state 3
    declaracion_variable           shift and go to state 4
    declaracion_funcion            shift and go to state 5
    tipo                           shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> lista_declaraciones .
    (2) lista_declaraciones -> lista_declaraciones . declaracion
    (4) declaracion -> . declaracion_variable
    (5) declaracion -> . declaracion_funcion
    (11) declaracion_variable -> . tipo IDENTIFIER SEMICOLON
    (12) declaracion_funcion -> . tipo IDENTIFIER LPAREN lista_parametros RPAREN bloque
    (6) tipo -> . INT_TYPE
    (7) tipo -> . FLOAT
    (8) tipo -> . BOOLEAN
    (9) tipo -> . CHAR
    (10) tipo -> . STRING

    $end            reduce using rule 1 (program -> lista_declaraciones .)
    INT_TYPE        shift and go to state 7
    FLOAT           shift and go to state 8
    BOOLEAN         shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11

    declaracion                    shift and go to state 12
    declaracion_variable           shift and go to state 4
    declaracion_funcion            shift and go to state 5
    tipo                           shift and go to state 6

state 3

    (3) lista_declaraciones -> declaracion .

    INT_TYPE        reduce using rule 3 (lista_declaraciones -> declaracion .)
    FLOAT           reduce using rule 3 (lista_declaraciones -> declaracion .)
    BOOLEAN         reduce using rule 3 (lista_declaraciones -> declaracion .)
    CHAR            reduce using rule 3 (lista_declaraciones -> declaracion .)
    STRING          reduce using rule 3 (lista_declaraciones -> declaracion .)
    $end            reduce using rule 3 (lista_declaraciones -> declaracion .)


state 4

    (4) declaracion -> declaracion_variable .

    INT_TYPE        reduce using rule 4 (declaracion -> declaracion_variable .)
    FLOAT           reduce using rule 4 (declaracion -> declaracion_variable .)
    BOOLEAN         reduce using rule 4 (declaracion -> declaracion_variable .)
    CHAR            reduce using rule 4 (declaracion -> declaracion_variable .)
    STRING          reduce using rule 4 (declaracion -> declaracion_variable .)
    $end            reduce using rule 4 (declaracion -> declaracion_variable .)


state 5

    (5) declaracion -> declaracion_funcion .

    INT_TYPE        reduce using rule 5 (declaracion -> declaracion_funcion .)
    FLOAT           reduce using rule 5 (declaracion -> declaracion_funcion .)
    BOOLEAN         reduce using rule 5 (declaracion -> declaracion_funcion .)
    CHAR            reduce using rule 5 (declaracion -> declaracion_funcion .)
    STRING          reduce using rule 5 (declaracion -> declaracion_funcion .)
    $end            reduce using rule 5 (declaracion -> declaracion_funcion .)


state 6

    (11) declaracion_variable -> tipo . IDENTIFIER SEMICOLON
    (12) declaracion_funcion -> tipo . IDENTIFIER LPAREN lista_parametros RPAREN bloque

    IDENTIFIER      shift and go to state 13


state 7

    (6) tipo -> INT_TYPE .

    IDENTIFIER      reduce using rule 6 (tipo -> INT_TYPE .)


state 8

    (7) tipo -> FLOAT .

    IDENTIFIER      reduce using rule 7 (tipo -> FLOAT .)


state 9

    (8) tipo -> BOOLEAN .

    IDENTIFIER      reduce using rule 8 (tipo -> BOOLEAN .)


state 10

    (9) tipo -> CHAR .

    IDENTIFIER      reduce using rule 9 (tipo -> CHAR .)


state 11

    (10) tipo -> STRING .

    IDENTIFIER      reduce using rule 10 (tipo -> STRING .)


state 12

    (2) lista_declaraciones -> lista_declaraciones declaracion .

    INT_TYPE        reduce using rule 2 (lista_declaraciones -> lista_declaraciones declaracion .)
    FLOAT           reduce using rule 2 (lista_declaraciones -> lista_declaraciones declaracion .)
    BOOLEAN         reduce using rule 2 (lista_declaraciones -> lista_declaraciones declaracion .)
    CHAR            reduce using rule 2 (lista_declaraciones -> lista_declaraciones declaracion .)
    STRING          reduce using rule 2 (lista_declaraciones -> lista_declaraciones declaracion .)
    $end            reduce using rule 2 (lista_declaraciones -> lista_declaraciones declaracion .)


state 13

    (11) declaracion_variable -> tipo IDENTIFIER . SEMICOLON
    (12) declaracion_funcion -> tipo IDENTIFIER . LPAREN lista_parametros RPAREN bloque

    SEMICOLON       shift and go to state 14
    LPAREN          shift and go to state 15


state 14

    (11) declaracion_variable -> tipo IDENTIFIER SEMICOLON .

    INT_TYPE        reduce using rule 11 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 11 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 11 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    CHAR            reduce using rule 11 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    STRING          reduce using rule 11 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)
    $end            reduce using rule 11 (declaracion_variable -> tipo IDENTIFIER SEMICOLON .)


state 15

    (12) declaracion_funcion -> tipo IDENTIFIER LPAREN . lista_parametros RPAREN bloque
    (13) lista_parametros -> . lista_parametros COMMA tipo IDENTIFIER
    (14) lista_parametros -> . tipo IDENTIFIER
    (15) lista_parametros -> .
    (6) tipo -> . INT_TYPE
    (7) tipo -> . FLOAT
    (8) tipo -> . BOOLEAN
    (9) tipo -> . CHAR
    (10) tipo -> . STRING

    RPAREN          reduce using rule 15 (lista_parametros -> .)
    COMMA           reduce using rule 15 (lista_parametros -> .)
    INT_TYPE        shift and go to state 7
    FLOAT           shift and go to state 8
    BOOLEAN         shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11

    tipo                           shift and go to state 16
    lista_parametros               shift and go to state 17

state 16

    (14) lista_parametros -> tipo . IDENTIFIER

    IDENTIFIER      shift and go to state 18


state 17

    (12) declaracion_funcion -> tipo IDENTIFIER LPAREN lista_parametros . RPAREN bloque
    (13) lista_parametros -> lista_parametros . COMMA tipo IDENTIFIER

    RPAREN          shift and go to state 19
    COMMA           shift and go to state 20


state 18

    (14) lista_parametros -> tipo IDENTIFIER .

    RPAREN          reduce using rule 14 (lista_parametros -> tipo IDENTIFIER .)
    COMMA           reduce using rule 14 (lista_parametros -> tipo IDENTIFIER .)


state 19

    (12) declaracion_funcion -> tipo IDENTIFIER LPAREN lista_parametros RPAREN . bloque
    (16) bloque -> . LBRACE lista_sentencias RBRACE

    LBRACE          shift and go to state 22

    bloque                         shift and go to state 21

state 20

    (13) lista_parametros -> lista_parametros COMMA . tipo IDENTIFIER
    (6) tipo -> . INT_TYPE
    (7) tipo -> . FLOAT
    (8) tipo -> . BOOLEAN
    (9) tipo -> . CHAR
    (10) tipo -> . STRING

    INT_TYPE        shift and go to state 7
    FLOAT           shift and go to state 8
    BOOLEAN         shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11

    tipo                           shift and go to state 23

state 21

    (12) declaracion_funcion -> tipo IDENTIFIER LPAREN lista_parametros RPAREN bloque .

    INT_TYPE        reduce using rule 12 (declaracion_funcion -> tipo IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    FLOAT           reduce using rule 12 (declaracion_funcion -> tipo IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    BOOLEAN         reduce using rule 12 (declaracion_funcion -> tipo IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    CHAR            reduce using rule 12 (declaracion_funcion -> tipo IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    STRING          reduce using rule 12 (declaracion_funcion -> tipo IDENTIFIER LPAREN lista_parametros RPAREN bloque .)
    $end            reduce using rule 12 (declaracion_funcion -> tipo IDENTIFIER LPAREN lista_parametros RPAREN bloque .)


state 22

    (16) bloque -> LBRACE . lista_sentencias RBRACE
    (17) lista_sentencias -> . lista_sentencias sentencia
    (18) lista_sentencias -> . sentencia
    (19) lista_sentencias -> .
    (26) sentencia -> . IDENTIFIER EQUALS expresion SEMICOLON
    (27) sentencia -> . IF LPAREN expresion RPAREN bloque
    (28) sentencia -> . IF LPAREN expresion RPAREN bloque ELSE bloque
    (29) sentencia -> . FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque
    (30) sentencia -> . WHILE LPAREN expresion RPAREN bloque

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RBRACE          reduce using rule 19 (lista_sentencias -> .)
    IDENTIFIER      shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    WHILE           shift and go to state 29

  ! IDENTIFIER      [ reduce using rule 19 (lista_sentencias -> .) ]
  ! IF              [ reduce using rule 19 (lista_sentencias -> .) ]
  ! FOR             [ reduce using rule 19 (lista_sentencias -> .) ]
  ! WHILE           [ reduce using rule 19 (lista_sentencias -> .) ]

    lista_sentencias               shift and go to state 24
    sentencia                      shift and go to state 25

state 23

    (13) lista_parametros -> lista_parametros COMMA tipo . IDENTIFIER

    IDENTIFIER      shift and go to state 30


state 24

    (16) bloque -> LBRACE lista_sentencias . RBRACE
    (17) lista_sentencias -> lista_sentencias . sentencia
    (26) sentencia -> . IDENTIFIER EQUALS expresion SEMICOLON
    (27) sentencia -> . IF LPAREN expresion RPAREN bloque
    (28) sentencia -> . IF LPAREN expresion RPAREN bloque ELSE bloque
    (29) sentencia -> . FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque
    (30) sentencia -> . WHILE LPAREN expresion RPAREN bloque

    RBRACE          shift and go to state 31
    IDENTIFIER      shift and go to state 26
    IF              shift and go to state 27
    FOR             shift and go to state 28
    WHILE           shift and go to state 29

    sentencia                      shift and go to state 32

state 25

    (18) lista_sentencias -> sentencia .

    RBRACE          reduce using rule 18 (lista_sentencias -> sentencia .)
    IDENTIFIER      reduce using rule 18 (lista_sentencias -> sentencia .)
    IF              reduce using rule 18 (lista_sentencias -> sentencia .)
    FOR             reduce using rule 18 (lista_sentencias -> sentencia .)
    WHILE           reduce using rule 18 (lista_sentencias -> sentencia .)


state 26

    (26) sentencia -> IDENTIFIER . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 33


state 27

    (27) sentencia -> IF . LPAREN expresion RPAREN bloque
    (28) sentencia -> IF . LPAREN expresion RPAREN bloque ELSE bloque

    LPAREN          shift and go to state 34


state 28

    (29) sentencia -> FOR . LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque

    LPAREN          shift and go to state 35


state 29

    (30) sentencia -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 36


state 30

    (13) lista_parametros -> lista_parametros COMMA tipo IDENTIFIER .

    RPAREN          reduce using rule 13 (lista_parametros -> lista_parametros COMMA tipo IDENTIFIER .)
    COMMA           reduce using rule 13 (lista_parametros -> lista_parametros COMMA tipo IDENTIFIER .)


state 31

    (16) bloque -> LBRACE lista_sentencias RBRACE .

    INT_TYPE        reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)
    FLOAT           reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)
    BOOLEAN         reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)
    CHAR            reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)
    STRING          reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)
    $end            reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)
    ELSE            reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)
    RBRACE          reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)
    IDENTIFIER      reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)
    IF              reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)
    FOR             reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)
    WHILE           reduce using rule 16 (bloque -> LBRACE lista_sentencias RBRACE .)


state 32

    (17) lista_sentencias -> lista_sentencias sentencia .

    RBRACE          reduce using rule 17 (lista_sentencias -> lista_sentencias sentencia .)
    IDENTIFIER      reduce using rule 17 (lista_sentencias -> lista_sentencias sentencia .)
    IF              reduce using rule 17 (lista_sentencias -> lista_sentencias sentencia .)
    FOR             reduce using rule 17 (lista_sentencias -> lista_sentencias sentencia .)
    WHILE           reduce using rule 17 (lista_sentencias -> lista_sentencias sentencia .)


state 33

    (26) sentencia -> IDENTIFIER EQUALS . expresion SEMICOLON
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 38

state 34

    (27) sentencia -> IF LPAREN . expresion RPAREN bloque
    (28) sentencia -> IF LPAREN . expresion RPAREN bloque ELSE bloque
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 44

state 35

    (29) sentencia -> FOR LPAREN . tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque
    (6) tipo -> . INT_TYPE
    (7) tipo -> . FLOAT
    (8) tipo -> . BOOLEAN
    (9) tipo -> . CHAR
    (10) tipo -> . STRING

    INT_TYPE        shift and go to state 7
    FLOAT           shift and go to state 8
    BOOLEAN         shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 11

    tipo                           shift and go to state 45

state 36

    (30) sentencia -> WHILE LPAREN . expresion RPAREN bloque
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 46

state 37

    (31) expresion -> IDENTIFIER .

    SEMICOLON       reduce using rule 31 (expresion -> IDENTIFIER .)
    PLUS            reduce using rule 31 (expresion -> IDENTIFIER .)
    MINUS           reduce using rule 31 (expresion -> IDENTIFIER .)
    MULT            reduce using rule 31 (expresion -> IDENTIFIER .)
    DIV             reduce using rule 31 (expresion -> IDENTIFIER .)
    AND             reduce using rule 31 (expresion -> IDENTIFIER .)
    OR              reduce using rule 31 (expresion -> IDENTIFIER .)
    RPAREN          reduce using rule 31 (expresion -> IDENTIFIER .)


state 38

    (26) sentencia -> IDENTIFIER EQUALS expresion . SEMICOLON
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

    SEMICOLON       shift and go to state 47
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    MULT            shift and go to state 50
    DIV             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 39

    (32) expresion -> NUMBER .

    SEMICOLON       reduce using rule 32 (expresion -> NUMBER .)
    PLUS            reduce using rule 32 (expresion -> NUMBER .)
    MINUS           reduce using rule 32 (expresion -> NUMBER .)
    MULT            reduce using rule 32 (expresion -> NUMBER .)
    DIV             reduce using rule 32 (expresion -> NUMBER .)
    AND             reduce using rule 32 (expresion -> NUMBER .)
    OR              reduce using rule 32 (expresion -> NUMBER .)
    RPAREN          reduce using rule 32 (expresion -> NUMBER .)


state 40

    (33) expresion -> STRING_LITERAL .

    SEMICOLON       reduce using rule 33 (expresion -> STRING_LITERAL .)
    PLUS            reduce using rule 33 (expresion -> STRING_LITERAL .)
    MINUS           reduce using rule 33 (expresion -> STRING_LITERAL .)
    MULT            reduce using rule 33 (expresion -> STRING_LITERAL .)
    DIV             reduce using rule 33 (expresion -> STRING_LITERAL .)
    AND             reduce using rule 33 (expresion -> STRING_LITERAL .)
    OR              reduce using rule 33 (expresion -> STRING_LITERAL .)
    RPAREN          reduce using rule 33 (expresion -> STRING_LITERAL .)


state 41

    (34) expresion -> CHARACTER_LITERAL .

    SEMICOLON       reduce using rule 34 (expresion -> CHARACTER_LITERAL .)
    PLUS            reduce using rule 34 (expresion -> CHARACTER_LITERAL .)
    MINUS           reduce using rule 34 (expresion -> CHARACTER_LITERAL .)
    MULT            reduce using rule 34 (expresion -> CHARACTER_LITERAL .)
    DIV             reduce using rule 34 (expresion -> CHARACTER_LITERAL .)
    AND             reduce using rule 34 (expresion -> CHARACTER_LITERAL .)
    OR              reduce using rule 34 (expresion -> CHARACTER_LITERAL .)
    RPAREN          reduce using rule 34 (expresion -> CHARACTER_LITERAL .)


state 42

    (35) expresion -> BOOLEAN_LITERAL .

    SEMICOLON       reduce using rule 35 (expresion -> BOOLEAN_LITERAL .)
    PLUS            reduce using rule 35 (expresion -> BOOLEAN_LITERAL .)
    MINUS           reduce using rule 35 (expresion -> BOOLEAN_LITERAL .)
    MULT            reduce using rule 35 (expresion -> BOOLEAN_LITERAL .)
    DIV             reduce using rule 35 (expresion -> BOOLEAN_LITERAL .)
    AND             reduce using rule 35 (expresion -> BOOLEAN_LITERAL .)
    OR              reduce using rule 35 (expresion -> BOOLEAN_LITERAL .)
    RPAREN          reduce using rule 35 (expresion -> BOOLEAN_LITERAL .)


state 43

    (36) expresion -> NULL_LITERAL .

    SEMICOLON       reduce using rule 36 (expresion -> NULL_LITERAL .)
    PLUS            reduce using rule 36 (expresion -> NULL_LITERAL .)
    MINUS           reduce using rule 36 (expresion -> NULL_LITERAL .)
    MULT            reduce using rule 36 (expresion -> NULL_LITERAL .)
    DIV             reduce using rule 36 (expresion -> NULL_LITERAL .)
    AND             reduce using rule 36 (expresion -> NULL_LITERAL .)
    OR              reduce using rule 36 (expresion -> NULL_LITERAL .)
    RPAREN          reduce using rule 36 (expresion -> NULL_LITERAL .)


state 44

    (27) sentencia -> IF LPAREN expresion . RPAREN bloque
    (28) sentencia -> IF LPAREN expresion . RPAREN bloque ELSE bloque
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

    RPAREN          shift and go to state 54
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    MULT            shift and go to state 50
    DIV             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 45

    (29) sentencia -> FOR LPAREN tipo . IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque

    IDENTIFIER      shift and go to state 55


state 46

    (30) sentencia -> WHILE LPAREN expresion . RPAREN bloque
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

    RPAREN          shift and go to state 56
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    MULT            shift and go to state 50
    DIV             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 47

    (26) sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .

    RBRACE          reduce using rule 26 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    IDENTIFIER      reduce using rule 26 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    IF              reduce using rule 26 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    FOR             reduce using rule 26 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 26 (sentencia -> IDENTIFIER EQUALS expresion SEMICOLON .)


state 48

    (20) expresion -> expresion PLUS . expresion
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 57

state 49

    (21) expresion -> expresion MINUS . expresion
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 58

state 50

    (22) expresion -> expresion MULT . expresion
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 59

state 51

    (23) expresion -> expresion DIV . expresion
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 60

state 52

    (24) expresion -> expresion AND . expresion
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 61

state 53

    (25) expresion -> expresion OR . expresion
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 62

state 54

    (27) sentencia -> IF LPAREN expresion RPAREN . bloque
    (28) sentencia -> IF LPAREN expresion RPAREN . bloque ELSE bloque
    (16) bloque -> . LBRACE lista_sentencias RBRACE

    LBRACE          shift and go to state 22

    bloque                         shift and go to state 63

state 55

    (29) sentencia -> FOR LPAREN tipo IDENTIFIER . EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque

    EQUALS          shift and go to state 64


state 56

    (30) sentencia -> WHILE LPAREN expresion RPAREN . bloque
    (16) bloque -> . LBRACE lista_sentencias RBRACE

    LBRACE          shift and go to state 22

    bloque                         shift and go to state 65

state 57

    (20) expresion -> expresion PLUS expresion .
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

    SEMICOLON       reduce using rule 20 (expresion -> expresion PLUS expresion .)
    PLUS            reduce using rule 20 (expresion -> expresion PLUS expresion .)
    MINUS           reduce using rule 20 (expresion -> expresion PLUS expresion .)
    AND             reduce using rule 20 (expresion -> expresion PLUS expresion .)
    OR              reduce using rule 20 (expresion -> expresion PLUS expresion .)
    RPAREN          reduce using rule 20 (expresion -> expresion PLUS expresion .)
    MULT            shift and go to state 50
    DIV             shift and go to state 51

  ! MULT            [ reduce using rule 20 (expresion -> expresion PLUS expresion .) ]
  ! DIV             [ reduce using rule 20 (expresion -> expresion PLUS expresion .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 58

    (21) expresion -> expresion MINUS expresion .
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

    SEMICOLON       reduce using rule 21 (expresion -> expresion MINUS expresion .)
    PLUS            reduce using rule 21 (expresion -> expresion MINUS expresion .)
    MINUS           reduce using rule 21 (expresion -> expresion MINUS expresion .)
    AND             reduce using rule 21 (expresion -> expresion MINUS expresion .)
    OR              reduce using rule 21 (expresion -> expresion MINUS expresion .)
    RPAREN          reduce using rule 21 (expresion -> expresion MINUS expresion .)
    MULT            shift and go to state 50
    DIV             shift and go to state 51

  ! MULT            [ reduce using rule 21 (expresion -> expresion MINUS expresion .) ]
  ! DIV             [ reduce using rule 21 (expresion -> expresion MINUS expresion .) ]
  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 59

    (22) expresion -> expresion MULT expresion .
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

    SEMICOLON       reduce using rule 22 (expresion -> expresion MULT expresion .)
    PLUS            reduce using rule 22 (expresion -> expresion MULT expresion .)
    MINUS           reduce using rule 22 (expresion -> expresion MULT expresion .)
    MULT            reduce using rule 22 (expresion -> expresion MULT expresion .)
    DIV             reduce using rule 22 (expresion -> expresion MULT expresion .)
    AND             reduce using rule 22 (expresion -> expresion MULT expresion .)
    OR              reduce using rule 22 (expresion -> expresion MULT expresion .)
    RPAREN          reduce using rule 22 (expresion -> expresion MULT expresion .)

  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! MULT            [ shift and go to state 50 ]
  ! DIV             [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 60

    (23) expresion -> expresion DIV expresion .
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

    SEMICOLON       reduce using rule 23 (expresion -> expresion DIV expresion .)
    PLUS            reduce using rule 23 (expresion -> expresion DIV expresion .)
    MINUS           reduce using rule 23 (expresion -> expresion DIV expresion .)
    MULT            reduce using rule 23 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 23 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 23 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 23 (expresion -> expresion DIV expresion .)
    RPAREN          reduce using rule 23 (expresion -> expresion DIV expresion .)

  ! PLUS            [ shift and go to state 48 ]
  ! MINUS           [ shift and go to state 49 ]
  ! MULT            [ shift and go to state 50 ]
  ! DIV             [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 61

    (24) expresion -> expresion AND expresion .
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 24 (expresion -> expresion AND expresion .)
    RPAREN          reduce using rule 24 (expresion -> expresion AND expresion .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    MULT            shift and go to state 50
    DIV             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! PLUS            [ reduce using rule 24 (expresion -> expresion AND expresion .) ]
  ! MINUS           [ reduce using rule 24 (expresion -> expresion AND expresion .) ]
  ! MULT            [ reduce using rule 24 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 24 (expresion -> expresion AND expresion .) ]
  ! AND             [ reduce using rule 24 (expresion -> expresion AND expresion .) ]
  ! OR              [ reduce using rule 24 (expresion -> expresion AND expresion .) ]


state 62

    (25) expresion -> expresion OR expresion .
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 25 (expresion -> expresion OR expresion .)
    RPAREN          reduce using rule 25 (expresion -> expresion OR expresion .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    MULT            shift and go to state 50
    DIV             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! PLUS            [ reduce using rule 25 (expresion -> expresion OR expresion .) ]
  ! MINUS           [ reduce using rule 25 (expresion -> expresion OR expresion .) ]
  ! MULT            [ reduce using rule 25 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 25 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 25 (expresion -> expresion OR expresion .) ]
  ! OR              [ reduce using rule 25 (expresion -> expresion OR expresion .) ]


state 63

    (27) sentencia -> IF LPAREN expresion RPAREN bloque .
    (28) sentencia -> IF LPAREN expresion RPAREN bloque . ELSE bloque

    RBRACE          reduce using rule 27 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    IDENTIFIER      reduce using rule 27 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 27 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    FOR             reduce using rule 27 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 27 (sentencia -> IF LPAREN expresion RPAREN bloque .)
    ELSE            shift and go to state 66


state 64

    (29) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS . expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 67

state 65

    (30) sentencia -> WHILE LPAREN expresion RPAREN bloque .

    RBRACE          reduce using rule 30 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    IDENTIFIER      reduce using rule 30 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 30 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    FOR             reduce using rule 30 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 30 (sentencia -> WHILE LPAREN expresion RPAREN bloque .)


state 66

    (28) sentencia -> IF LPAREN expresion RPAREN bloque ELSE . bloque
    (16) bloque -> . LBRACE lista_sentencias RBRACE

    LBRACE          shift and go to state 22

    bloque                         shift and go to state 68

state 67

    (29) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion . SEMICOLON expresion SEMICOLON expresion RPAREN bloque
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

    SEMICOLON       shift and go to state 69
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    MULT            shift and go to state 50
    DIV             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 68

    (28) sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .

    RBRACE          reduce using rule 28 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    IDENTIFIER      reduce using rule 28 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    IF              reduce using rule 28 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    FOR             reduce using rule 28 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)
    WHILE           reduce using rule 28 (sentencia -> IF LPAREN expresion RPAREN bloque ELSE bloque .)


state 69

    (29) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON . expresion SEMICOLON expresion RPAREN bloque
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 70

state 70

    (29) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion . SEMICOLON expresion RPAREN bloque
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

    SEMICOLON       shift and go to state 71
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    MULT            shift and go to state 50
    DIV             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 71

    (29) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON . expresion RPAREN bloque
    (20) expresion -> . expresion PLUS expresion
    (21) expresion -> . expresion MINUS expresion
    (22) expresion -> . expresion MULT expresion
    (23) expresion -> . expresion DIV expresion
    (24) expresion -> . expresion AND expresion
    (25) expresion -> . expresion OR expresion
    (31) expresion -> . IDENTIFIER
    (32) expresion -> . NUMBER
    (33) expresion -> . STRING_LITERAL
    (34) expresion -> . CHARACTER_LITERAL
    (35) expresion -> . BOOLEAN_LITERAL
    (36) expresion -> . NULL_LITERAL

    IDENTIFIER      shift and go to state 37
    NUMBER          shift and go to state 39
    STRING_LITERAL  shift and go to state 40
    CHARACTER_LITERAL shift and go to state 41
    BOOLEAN_LITERAL shift and go to state 42
    NULL_LITERAL    shift and go to state 43

    expresion                      shift and go to state 72

state 72

    (29) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion . RPAREN bloque
    (20) expresion -> expresion . PLUS expresion
    (21) expresion -> expresion . MINUS expresion
    (22) expresion -> expresion . MULT expresion
    (23) expresion -> expresion . DIV expresion
    (24) expresion -> expresion . AND expresion
    (25) expresion -> expresion . OR expresion

    RPAREN          shift and go to state 73
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    MULT            shift and go to state 50
    DIV             shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 73

    (29) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN . bloque
    (16) bloque -> . LBRACE lista_sentencias RBRACE

    LBRACE          shift and go to state 22

    bloque                         shift and go to state 74

state 74

    (29) sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .

    RBRACE          reduce using rule 29 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    IDENTIFIER      reduce using rule 29 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    IF              reduce using rule 29 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    FOR             reduce using rule 29 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)
    WHILE           reduce using rule 29 (sentencia -> FOR LPAREN tipo IDENTIFIER EQUALS expresion SEMICOLON expresion SEMICOLON expresion RPAREN bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFIER in state 22 resolved as shift
WARNING: shift/reduce conflict for IF in state 22 resolved as shift
WARNING: shift/reduce conflict for FOR in state 22 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 22 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MULT in state 61 resolved as shift
WARNING: shift/reduce conflict for DIV in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MULT in state 62 resolved as shift
WARNING: shift/reduce conflict for DIV in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
